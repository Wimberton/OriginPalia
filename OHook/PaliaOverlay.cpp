#include "PaliaOverlay.h"
#include "DetourManager.h"
#include <SDK/Palia_parameters.hpp>

#include "ImGuiExt.h"
#include "SDKExt.h"
#include "Utils.h"

#include<iostream>
#include <fstream>
#include <sstream>
#include <filesystem>

#include <algorithm>
#include <imgui_internal.h>

using namespace SDK;
namespace fs = std::filesystem;

std::vector<std::string> debugger;
DetourManager gDetourManager;

// Path for the configuration file
const std::string configDirectory = "C:\\ProgramData\\OriginPalia\\config";
const std::string configFileName = "overlay_config.json";
const std::string configFilePath = configDirectory + "\\" + configFileName;
float PaliaOverlay::ESPTextScale = 1.0f;

// Functions for saving and loading config data
void EnsureDirectoryExists(const std::string& path) {
    fs::path dir(path);
    if (!fs::exists(dir)) {
        fs::create_directories(dir);
    }
}
void SaveConfiguration(bool bEnableAntiAfk, bool bEnableSilentAimbot, bool bEnableAimbot, bool bTeleportToTargeted, bool bEnableWaypointTeleport, bool bAvoidTeleportingToPlayers, bool bEnableLootbagTeleportation, bool bEnableESP, float ESPTextScale, bool bEnableESPCulling, int CullDistance, bool bDrawFOVCircle, float FOVRadius, bool bFishingNoDurability, bool bFishingMultiplayerHelp, bool bFishingPerfectCatch, bool bFishingInstantCatch, bool bFishingSell, bool bFishingDiscard, bool bFishingOpenStoreWaterlogged, bool bRequireClickFishing, float CustomWalkSpeed, float CustomSprintSpeedMultiplier, float CustomClimbingSpeed, float CustomGlidingSpeed, float CustomGlidingFallSpeed, float CustomJumpVelocity, float CustomMaxStepHeight, bool bPlaceAnywhere, bool bEnableSernuk, bool bEnableElderSernuk, bool bEnableProudhornSernuk, bool bEnableChapaa, bool bEnableStripedChapaa, bool bEnableAzureChapaa, bool bEnableMinigameChapaa, bool bEnableMuujin, bool bEnableBandedMuujin, bool bEnableBluebristleMuujin, bool bEnableClayLg, bool bEnableStoneSm, bool bEnableStoneMed, bool bEnableStoneLg, bool bEnableCopperSm, bool bEnableCopperMed, bool bEnableCopperLg, bool bEnableIronSm, bool bEnableIronMed, bool bEnableIronLg, bool bEnablePaliumSm, bool bEnablePaliumMed, bool bEnablePaliumLg, bool bEnableCoral, bool bEnableOyster, bool bEnableShell, bool bEnablePoisonFlower, bool bEnablePoisonFlowerP, bool bEnableWaterFlower, bool bEnableWaterFlowerP, bool bEnableHeartdrop, bool bEnableHeartdropP, bool bEnableSundrop, bool bEnableSundropP, bool bEnableDragonsBeard, bool bEnableDragonsBeardP, bool bEnableEmeraldCarpet, bool bEnableEmeraldCarpetP, bool bEnableMushroomBlue, bool bEnableMushroomBlueP, bool bEnableMushroomRed, bool bEnableMushroomRedP, bool bEnableDariCloves, bool bEnableDariClovesP, bool bEnableHeatRoot, bool bEnableHeatRootP, bool bEnableSpicedSprouts, bool bEnableSpicedSproutsP, bool bEnableSweetLeaves, bool bEnableSweetLeavesP, bool bEnableGarlic, bool bEnableGarlicP, bool bEnableGinger, bool bEnableGingerP, bool bEnableGreenOnion, bool bEnableGreenOnionP, bool bEnableBeeU, bool bEnableBeeUP, bool bEnableBeeR, bool bEnableBeeRP, bool bEnableBeetleC, bool bEnableBeetleCP, bool bEnableBeetleU, bool bEnableBeetleUP, bool bEnableBeetleR, bool bEnableBeetleRP, bool bEnableBeetleE, bool bEnableBeetleEP, bool bEnableButterflyC, bool bEnableButterflyCP, bool bEnableButterflyU, bool bEnableButterflyUP, bool bEnableButterflyR, bool bEnableButterflyRP, bool bEnableButterflyE, bool bEnableButterflyEP, bool bEnableCicadaC, bool bEnableCicadaCP, bool bEnableCicadaU, bool bEnableCicadaUP, bool bEnableCicadaR, bool bEnableCicadaRP, bool bEnableCrabC, bool bEnableCrabCP, bool bEnableCrabU, bool bEnableCrabUP, bool bEnableCrabR, bool bEnableCrabRP, bool bEnableCricketC, bool bEnableCricketCP, bool bEnableCricketU, bool bEnableCricketUP, bool bEnableCricketR, bool bEnableCricketRP, bool bEnableDragonflyC, bool bEnableDragonflyCP, bool bEnableDragonflyU, bool bEnableDragonflyUP, bool bEnableDragonflyR, bool bEnableDragonflyRP, bool bEnableDragonflyE, bool bEnableDragonflyEP, bool bEnableGlowbugC, bool bEnableGlowbugCP, bool bEnableGlowbugU, bool bEnableGlowbugUP, bool bEnableLadybugC, bool bEnableLadybugCP, bool bEnableLadybugU, bool bEnableLadybugUP, bool bEnableMantisU, bool bEnableMantisUP, bool bEnableMantisR, bool bEnableMantisRP, bool bEnableMantisR2, bool bEnableMantisR2P, bool bEnableMantisE, bool bEnableMantisEP, bool bEnableMothC, bool bEnableMothCP, bool bEnableMothU, bool bEnableMothUP, bool bEnableMothR, bool bEnableMothRP, bool bEnablePedeU, bool bEnablePedeUP, bool bEnablePedeR, bool bEnablePedeRP, bool bEnablePedeR2, bool bEnablePedeR2P, bool bEnableSnailU, bool bEnableSnailUP, bool bEnableSnailR, bool bEnableSnailRP, bool bEnableBushSm, bool bEnableSapwoodSm, bool bEnableSapwoodMed, bool bEnableSapwoodLg, bool bEnableHeartwoodSm, bool bEnableHeartwoodMed, bool bEnableHeartwoodLg, bool bEnableFlowSm, bool bEnableFlowMed, bool bEnableFlowLg, bool bEnablePlayers, bool bEnableNPC, bool bEnableFish, bool bEnablePools, bool bEnableLoot, bool bEnableQuest, bool bEnableRummagePiles, bool bEnableStables, bool bEnableOthers, int windowSizeX, int windowSizeY) {
    EnsureDirectoryExists(configDirectory);

    std::ofstream configFile(configFilePath);
    if (configFile.is_open()) {
        configFile << "{\n";
        configFile << "    \"Window Size X\": " << windowSizeX << ",\n";
        configFile << "    \"Window Size Y\": " << windowSizeY << ",\n";
        configFile << "    \"Enable AntiAFK\": " << (bEnableAntiAfk ? "true" : "false") << ",\n";
        configFile << "    \"Enable ESP\": " << (bEnableESP ? "true" : "false") << ",\n";
        configFile << "    \"ESP Text Scale\": " << ESPTextScale << ",\n";
        configFile << "    \"Limit Distance\": " << (bEnableESPCulling ? "true" : "false") << ",\n";
        configFile << "    \"Distance\": " << CullDistance << ",\n";
        configFile << "    \"Enable InteliAim Circle\": " << (bDrawFOVCircle ? "true" : "false") << ",\n";
        configFile << "    \"InteliAim Radius\": " << FOVRadius << ",\n";
        configFile << "    \"Enable Silent Aimbot\": " << (bEnableSilentAimbot ? "true" : "false") << ",\n";
        configFile << "    \"Enable Legacy Aimbot\": " << (bEnableAimbot ? "true" : "false") << ",\n";
        configFile << "    \"Teleport to Targeted\": " << (bTeleportToTargeted ? "true" : "false") << ",\n";
        configFile << "    \"Teleport to Waypoint\": " << (bEnableWaypointTeleport ? "true" : "false") << ",\n";
        configFile << "    \"Avoid Teleporting To Targeted Players\": " << (bAvoidTeleportingToPlayers ? "true" : "false") << ",\n";
        configFile << "    \"Teleport Dropped Loot to Player\": " << (bEnableLootbagTeleportation ? "true" : "false") << ",\n";
        configFile << "    \"No Fishing Rod Durability\": " << (bFishingNoDurability ? "true" : "false") << ",\n";
        configFile << "    \"Enable Fishing Multiplayer Help\": " << (bFishingMultiplayerHelp ? "true" : "false") << ",\n";
        configFile << "    \"Enable Fishing Perfect Catch\": " << (bFishingPerfectCatch ? "true" : "false") << ",\n";
        configFile << "    \"Enable Fishing Instant Catch\": " << (bFishingInstantCatch ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sell All Fish\": " << (bFishingSell ? "true" : "false") << ",\n";
        configFile << "    \"Enable Discarding Fishing Junk\": " << (bFishingDiscard ? "true" : "false") << ",\n";
        configFile << "    \"Fishing Open Store Waterlogged\": " << (bFishingOpenStoreWaterlogged ? "true" : "false") << ",\n";
        configFile << "    \"Require Left Click Fishing\": " << (bRequireClickFishing ? "true" : "false") << ",\n";
        configFile << "    \"Custom Walk Speed\": " << CustomWalkSpeed << ",\n";
        configFile << "    \"Custom Sprint Speed Multiplier\": " << CustomSprintSpeedMultiplier << ",\n";
        configFile << "    \"Custom Climbing Speed\": " << CustomClimbingSpeed << ",\n";
        configFile << "    \"Custom Gliding Speed\": " << CustomGlidingSpeed << ",\n";
        configFile << "    \"Custom Gliding Fall Speed\": " << CustomGlidingFallSpeed << ",\n";
        configFile << "    \"Custom Jump Velocity\": " << CustomJumpVelocity << ",\n";
        configFile << "    \"Custom Max Step Height\": " << CustomMaxStepHeight << ",\n";
        configFile << "    \"Place Items Anywhere\": " << (bPlaceAnywhere ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sernuk\": " << (bEnableSernuk ? "true" : "false") << ",\n";
        configFile << "    \"Enable Elder Sernuk\": " << (bEnableElderSernuk ? "true" : "false") << ",\n";
        configFile << "    \"Enable Proudhorn Sernuk\": " << (bEnableProudhornSernuk ? "true" : "false") << ",\n";
        configFile << "    \"Enable Chapaa\": " << (bEnableChapaa ? "true" : "false") << ",\n";
        configFile << "    \"Enable Striped Chapaa\": " << (bEnableStripedChapaa ? "true" : "false") << ",\n";
        configFile << "    \"Enable Azure Chapaa\": " << (bEnableAzureChapaa ? "true" : "false") << ",\n";
        configFile << "    \"Enable Minigame Chapaa\": " << (bEnableMinigameChapaa ? "true" : "false") << ",\n";
        configFile << "    \"Enable Muujin\": " << (bEnableMuujin ? "true" : "false") << ",\n";
        configFile << "    \"Enable Banded Muujin\": " << (bEnableBandedMuujin ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bluebristle Muujin\": " << (bEnableBluebristleMuujin ? "true" : "false") << ",\n";
        configFile << "    \"Enable Clay Lg\": " << (bEnableClayLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Stone Sm\": " << (bEnableStoneSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Stone Med\": " << (bEnableStoneMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Stone Lg\": " << (bEnableStoneLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Copper Sm\": " << (bEnableCopperSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Copper Med\": " << (bEnableCopperMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Copper Lg\": " << (bEnableCopperLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Iron Sm\": " << (bEnableIronSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Iron Med\": " << (bEnableIronMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Iron Lg\": " << (bEnableIronLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Palium Sm\": " << (bEnablePaliumSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Palium Med\": " << (bEnablePaliumMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Palium Lg\": " << (bEnablePaliumLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Coral\": " << (bEnableCoral ? "true" : "false") << ",\n";
        configFile << "    \"Enable Oyster\": " << (bEnableOyster ? "true" : "false") << ",\n";
        configFile << "    \"Enable Shell\": " << (bEnableShell ? "true" : "false") << ",\n";
        configFile << "    \"Enable Poison Flower\": " << (bEnablePoisonFlower ? "true" : "false") << ",\n";
        configFile << "    \"Enable Poison Flower P\": " << (bEnablePoisonFlowerP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Water Flower\": " << (bEnableWaterFlower ? "true" : "false") << ",\n";
        configFile << "    \"Enable Water Flower P\": " << (bEnableWaterFlowerP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heartdrop\": " << (bEnableHeartdrop ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heartdrop P\": " << (bEnableHeartdropP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sundrop\": " << (bEnableSundrop ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sundrop P\": " << (bEnableSundropP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragons Beard\": " << (bEnableDragonsBeard ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragons Beard P\": " << (bEnableDragonsBeardP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Emerald Carpet\": " << (bEnableEmeraldCarpet ? "true" : "false") << ",\n";
        configFile << "    \"Enable Emerald Carpet P\": " << (bEnableEmeraldCarpetP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mushroom Blue\": " << (bEnableMushroomBlue ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mushroom Blue P\": " << (bEnableMushroomBlueP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mushroom Red\": " << (bEnableMushroomRed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mushroom Red P\": " << (bEnableMushroomRedP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dari Cloves\": " << (bEnableDariCloves ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dari Cloves P\": " << (bEnableDariClovesP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heat Root\": " << (bEnableHeatRoot ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heat Root P\": " << (bEnableHeatRootP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Spiced Sprouts\": " << (bEnableSpicedSprouts ? "true" : "false") << ",\n";
        configFile << "    \"Enable Spiced Sprouts P\": " << (bEnableSpicedSproutsP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sweet Leaves\": " << (bEnableSweetLeaves ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sweet Leaves P\": " << (bEnableSweetLeavesP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Garlic\": " << (bEnableGarlic ? "true" : "false") << ",\n";
        configFile << "    \"Enable Garlic P\": " << (bEnableGarlicP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ginger\": " << (bEnableGinger ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ginger P\": " << (bEnableGingerP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Green Onion\": " << (bEnableGreenOnion ? "true" : "false") << ",\n";
        configFile << "    \"Enable Green Onion P\": " << (bEnableGreenOnionP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bee U\": " << (bEnableBeeU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bee U P\": " << (bEnableBeeUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bee R\": " << (bEnableBeeR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bee R P\": " << (bEnableBeeRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle C\": " << (bEnableBeetleC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle C P\": " << (bEnableBeetleCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle U\": " << (bEnableBeetleU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle U P\": " << (bEnableBeetleUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle R\": " << (bEnableBeetleR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle R P\": " << (bEnableBeetleRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle E\": " << (bEnableBeetleE ? "true" : "false") << ",\n";
        configFile << "    \"Enable Beetle E P\": " << (bEnableBeetleEP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly C\": " << (bEnableButterflyC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly C P\": " << (bEnableButterflyCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly U\": " << (bEnableButterflyU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly U P\": " << (bEnableButterflyUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly R\": " << (bEnableButterflyR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly R P\": " << (bEnableButterflyRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly E\": " << (bEnableButterflyE ? "true" : "false") << ",\n";
        configFile << "    \"Enable Butterfly E P\": " << (bEnableButterflyEP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada C\": " << (bEnableCicadaC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada C P\": " << (bEnableCicadaCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada U\": " << (bEnableCicadaU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada U P\": " << (bEnableCicadaUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada R\": " << (bEnableCicadaR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cicada R P\": " << (bEnableCicadaRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab C\": " << (bEnableCrabC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab C P\": " << (bEnableCrabCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab U\": " << (bEnableCrabU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab U P\": " << (bEnableCrabUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab R\": " << (bEnableCrabR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Crab R P\": " << (bEnableCrabRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket C\": " << (bEnableCricketC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket C P\": " << (bEnableCricketCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket U\": " << (bEnableCricketU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket U P\": " << (bEnableCricketUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket R\": " << (bEnableCricketR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Cricket R P\": " << (bEnableCricketRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly C\": " << (bEnableDragonflyC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly C P\": " << (bEnableDragonflyCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly U\": " << (bEnableDragonflyU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly U P\": " << (bEnableDragonflyUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly R\": " << (bEnableDragonflyR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly R P\": " << (bEnableDragonflyRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly E\": " << (bEnableDragonflyE ? "true" : "false") << ",\n";
        configFile << "    \"Enable Dragonfly E P\": " << (bEnableDragonflyEP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Glowbug C\": " << (bEnableGlowbugC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Glowbug C P\": " << (bEnableGlowbugCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Glowbug U\": " << (bEnableGlowbugU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Glowbug U P\": " << (bEnableGlowbugUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ladybug C\": " << (bEnableLadybugC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ladybug C P\": " << (bEnableLadybugCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ladybug U\": " << (bEnableLadybugU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Ladybug U P\": " << (bEnableLadybugUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis U\": " << (bEnableMantisU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis U P\": " << (bEnableMantisUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis R\": " << (bEnableMantisR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis R P\": " << (bEnableMantisRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis R2\": " << (bEnableMantisR2 ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis R2 P\": " << (bEnableMantisR2P ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis E\": " << (bEnableMantisE ? "true" : "false") << ",\n";
        configFile << "    \"Enable Mantis E P\": " << (bEnableMantisEP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth C\": " << (bEnableMothC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth C P\": " << (bEnableMothCP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth U\": " << (bEnableMothU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth U P\": " << (bEnableMothUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth R\": " << (bEnableMothR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Moth R P\": " << (bEnableMothRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede U\": " << (bEnablePedeU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede U P\": " << (bEnablePedeUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede R\": " << (bEnablePedeR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede R P\": " << (bEnablePedeRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede R2\": " << (bEnablePedeR2 ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pede R2 P\": " << (bEnablePedeR2P ? "true" : "false") << ",\n";
        configFile << "    \"Enable Snail U\": " << (bEnableSnailU ? "true" : "false") << ",\n";
        configFile << "    \"Enable Snail U P\": " << (bEnableSnailUP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Snail R\": " << (bEnableSnailR ? "true" : "false") << ",\n";
        configFile << "    \"Enable Snail R P\": " << (bEnableSnailRP ? "true" : "false") << ",\n";
        configFile << "    \"Enable Bush Sm\": " << (bEnableBushSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sapwood Sm\": " << (bEnableSapwoodSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sapwood Med\": " << (bEnableSapwoodMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Sapwood Lg\": " << (bEnableSapwoodLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heartwood Sm\": " << (bEnableHeartwoodSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heartwood Med\": " << (bEnableHeartwoodMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Heartwood Lg\": " << (bEnableHeartwoodLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Flow Sm\": " << (bEnableFlowSm ? "true" : "false") << ",\n";
        configFile << "    \"Enable Flow Med\": " << (bEnableFlowMed ? "true" : "false") << ",\n";
        configFile << "    \"Enable Flow Lg\": " << (bEnableFlowLg ? "true" : "false") << ",\n";
        configFile << "    \"Enable Players\": " << (bEnablePlayers ? "true" : "false") << ",\n";
        configFile << "    \"Enable NPC\": " << (bEnableNPC ? "true" : "false") << ",\n";
        configFile << "    \"Enable Fish\": " << (bEnableFish ? "true" : "false") << ",\n";
        configFile << "    \"Enable Pools\": " << (bEnablePools ? "true" : "false") << ",\n";
        configFile << "    \"Enable Loot\": " << (bEnableLoot ? "true" : "false") << ",\n";
        configFile << "    \"Enable Quest\": " << (bEnableQuest ? "true" : "false") << ",\n";
        configFile << "    \"Enable Rummage Piles\": " << (bEnableRummagePiles ? "true" : "false") << ",\n";
        configFile << "    \"Enable Stables\": " << (bEnableStables ? "true" : "false") << ",\n";
        configFile << "    \"Enable Others\": " << (bEnableOthers ? "true" : "false") << "\n";
        configFile << "}";
        configFile.close();
    }
}
bool LoadConfiguration(bool& bEnableAntiAfk, bool& bEnableSilentAimbot, bool& bEnableAimbot, bool& bTeleportToTargeted, bool& bEnableWaypointTeleport, bool& bAvoidTeleportingToPlayers, bool& bEnableLootbagTeleportation, bool& bEnableESP, float& ESPTextScale, bool& bEnableESPCulling, int& CullDistance, bool& bDrawFOVCircle, float& FOVRadius, bool& bFishingNoDurability, bool& bFishingMultiplayerHelp, bool& bFishingPerfectCatch, bool& bFishingInstantCatch, bool& bFishingSell, bool& bFishingDiscard, bool bFishingOpenStoreWaterlogged, bool& bRequireClickFishing, float& CustomWalkSpeed, float& CustomSprintSpeedMultiplier, float& CustomClimbingSpeed, float& CustomGlidingSpeed, float& CustomGlidingFallSpeed, float& CustomJumpVelocity, float& CustomMaxStepHeight, bool& bPlaceAnywhere, bool& bEnableSernuk, bool& bEnableElderSernuk, bool& bEnableProudhornSernuk, bool& bEnableChapaa, bool& bEnableStripedChapaa, bool& bEnableAzureChapaa, bool& bEnableMinigameChapaa, bool& bEnableMuujin, bool& bEnableBandedMuujin, bool& bEnableBluebristleMuujin, bool& bEnableClayLg, bool& bEnableStoneSm, bool& bEnableStoneMed, bool& bEnableStoneLg, bool& bEnableCopperSm, bool& bEnableCopperMed, bool& bEnableCopperLg, bool& bEnableIronSm, bool& bEnableIronMed, bool& bEnableIronLg, bool& bEnablePaliumSm, bool& bEnablePaliumMed, bool& bEnablePaliumLg, bool& bEnableCoral, bool& bEnableOyster, bool& bEnableShell, bool& bEnablePoisonFlower, bool& bEnablePoisonFlowerP, bool& bEnableWaterFlower, bool& bEnableWaterFlowerP, bool& bEnableHeartdrop, bool& bEnableHeartdropP, bool& bEnableSundrop, bool& bEnableSundropP, bool& bEnableDragonsBeard, bool& bEnableDragonsBeardP, bool& bEnableEmeraldCarpet, bool& bEnableEmeraldCarpetP, bool& bEnableMushroomBlue, bool& bEnableMushroomBlueP, bool& bEnableMushroomRed, bool& bEnableMushroomRedP, bool& bEnableDariCloves, bool& bEnableDariClovesP, bool& bEnableHeatRoot, bool& bEnableHeatRootP, bool& bEnableSpicedSprouts, bool& bEnableSpicedSproutsP, bool& bEnableSweetLeaves, bool& bEnableSweetLeavesP, bool& bEnableGarlic, bool& bEnableGarlicP, bool& bEnableGinger, bool& bEnableGingerP, bool& bEnableGreenOnion, bool& bEnableGreenOnionP, bool& bEnableBeeU, bool& bEnableBeeUP, bool& bEnableBeeR, bool& bEnableBeeRP, bool& bEnableBeetleC, bool& bEnableBeetleCP, bool& bEnableBeetleU, bool& bEnableBeetleUP, bool& bEnableBeetleR, bool& bEnableBeetleRP, bool& bEnableBeetleE, bool& bEnableBeetleEP, bool& bEnableButterflyC, bool& bEnableButterflyCP, bool& bEnableButterflyU, bool& bEnableButterflyUP, bool& bEnableButterflyR, bool& bEnableButterflyRP, bool& bEnableButterflyE, bool& bEnableButterflyEP, bool& bEnableCicadaC, bool& bEnableCicadaCP, bool& bEnableCicadaU, bool& bEnableCicadaUP, bool& bEnableCicadaR, bool& bEnableCicadaRP, bool& bEnableCrabC, bool& bEnableCrabCP, bool& bEnableCrabU, bool& bEnableCrabUP, bool& bEnableCrabR, bool& bEnableCrabRP, bool& bEnableCricketC, bool& bEnableCricketCP, bool& bEnableCricketU, bool& bEnableCricketUP, bool& bEnableCricketR, bool& bEnableCricketRP, bool& bEnableDragonflyC, bool& bEnableDragonflyCP, bool& bEnableDragonflyU, bool& bEnableDragonflyUP, bool& bEnableDragonflyR, bool& bEnableDragonflyRP, bool& bEnableDragonflyE, bool& bEnableDragonflyEP, bool& bEnableGlowbugC, bool& bEnableGlowbugCP, bool& bEnableGlowbugU, bool& bEnableGlowbugUP, bool& bEnableLadybugC, bool& bEnableLadybugCP, bool& bEnableLadybugU, bool& bEnableLadybugUP, bool& bEnableMantisU, bool& bEnableMantisUP, bool& bEnableMantisR, bool& bEnableMantisRP, bool& bEnableMantisR2, bool& bEnableMantisR2P, bool& bEnableMantisE, bool& bEnableMantisEP, bool& bEnableMothC, bool& bEnableMothCP, bool& bEnableMothU, bool& bEnableMothUP, bool& bEnableMothR, bool& bEnableMothRP, bool& bEnablePedeU, bool& bEnablePedeUP, bool& bEnablePedeR, bool& bEnablePedeRP, bool& bEnablePedeR2, bool& bEnablePedeR2P, bool& bEnableSnailU, bool& bEnableSnailUP, bool& bEnableSnailR, bool& bEnableSnailRP, bool& bEnableBushSm, bool& bEnableSapwoodSm, bool& bEnableSapwoodMed, bool& bEnableSapwoodLg, bool& bEnableHeartwoodSm, bool& bEnableHeartwoodMed, bool& bEnableHeartwoodLg, bool& bEnableFlowSm, bool& bEnableFlowMed, bool& bEnableFlowLg, bool& bEnablePlayers, bool& bEnableNPC, bool& bEnableFish, bool& bEnablePools, bool& bEnableLoot, bool& bEnableQuest, bool& bEnableRummagePiles, bool& bEnableStables, bool& bEnableOthers, int& windowSizeX, int& windowSizeY) {
    PaliaOverlay* Overlay = static_cast<PaliaOverlay*>(OverlayBase::Instance);

    if (!fs::exists(configFilePath)) {
        return false; // No config file to load
    }

    std::ifstream configFile(configFilePath);
    std::string line, content;
    if (configFile.is_open()) {
        while (getline(configFile, line)) {
            content += line;
        }
        configFile.close();

        bEnableAntiAfk = (content.find("\"Enable AntiAFK\": true") != std::string::npos);
        bEnableSilentAimbot = (content.find("\"Enable Silent Aimbot\": true") != std::string::npos);
        bEnableAimbot = (content.find("\"Enable Legacy Aimbot\": true") != std::string::npos);
        bTeleportToTargeted = (content.find("\"Teleport to Targeted\": true") != std::string::npos);
        bEnableWaypointTeleport = (content.find("\"Teleport to Waypoint\": true") != std::string::npos);
        bAvoidTeleportingToPlayers = (content.find("\"Avoid Teleporting To Targeted Players\": true") != std::string::npos);
        bEnableLootbagTeleportation = (content.find("\"Teleport Dropped Loot to Player\": true") != std::string::npos);
        bEnableESP = (content.find("\"Enable ESP\": true") != std::string::npos);
        bEnableESPCulling = (content.find("\"Limit Distance\": true") != std::string::npos);
        bFishingNoDurability = (content.find("\"No Fishing Rod Durability\": true") != std::string::npos);
        bFishingMultiplayerHelp = (content.find("\"Enable Fishing Multiplayer Help\": true") != std::string::npos);
        bFishingPerfectCatch = (content.find("\"Enable Fishing Perfect Catch\": true") != std::string::npos);
        bFishingInstantCatch = (content.find("\"Enable Fishing Instant Catch\": true") != std::string::npos);
        bFishingSell = (content.find("\"Enable Sell All Fish\": true") != std::string::npos);
        bFishingDiscard = (content.find("\"Enable Discarding Fishing Junk\": true") != std::string::npos);
        bFishingOpenStoreWaterlogged = (content.find("\"Fishing Open Store Waterlogged\": true") != std::string::npos);
        bRequireClickFishing = (content.find("\"Require Left Click Fishing\": true") != std::string::npos);
        bPlaceAnywhere = (content.find("\"Place Items Anywhere\": true") != std::string::npos);
        bEnableSernuk = (content.find("\"Enable Sernuk\": true") != std::string::npos);
        bEnableElderSernuk = (content.find("\"Enable Elder Sernuk\": true") != std::string::npos);
        bEnableProudhornSernuk = (content.find("\"Enable Proudhorn Sernuk\": true") != std::string::npos);
        bEnableChapaa = (content.find("\"Enable Chapaa\": true") != std::string::npos);
        bEnableStripedChapaa = (content.find("\"Enable Striped Chapaa\": true") != std::string::npos);
        bEnableAzureChapaa = (content.find("\"Enable Azure Chapaa\": true") != std::string::npos);
        bEnableMinigameChapaa = (content.find("\"Enable Minigame Chapaa\": true") != std::string::npos);
        bEnableMuujin = (content.find("\"Enable Muujin\": true") != std::string::npos);
        bEnableBandedMuujin = (content.find("\"Enable Banded Muujin\": true") != std::string::npos);
        bEnableBluebristleMuujin = (content.find("\"Enable Bluebristle Muujin\": true") != std::string::npos);
        bEnableClayLg = (content.find("\"Enable Clay Lg\": true") != std::string::npos);
        bEnableStoneSm = (content.find("\"Enable Stone Sm\": true") != std::string::npos);
        bEnableStoneMed = (content.find("\"Enable Stone Med\": true") != std::string::npos);
        bEnableStoneLg = (content.find("\"Enable Stone Lg\": true") != std::string::npos);
        bEnableCopperSm = (content.find("\"Enable Copper Sm\": true") != std::string::npos);
        bEnableCopperMed = (content.find("\"Enable Copper Med\": true") != std::string::npos);
        bEnableCopperLg = (content.find("\"Enable Copper Lg\": true") != std::string::npos);
        bEnableIronSm = (content.find("\"Enable Iron Sm\": true") != std::string::npos);
        bEnableIronMed = (content.find("\"Enable Iron Med\": true") != std::string::npos);
        bEnableIronLg = (content.find("\"Enable Iron Lg\": true") != std::string::npos);
        bEnablePaliumSm = (content.find("\"Enable Palium Sm\": true") != std::string::npos);
        bEnablePaliumMed = (content.find("\"Enable Palium Med\": true") != std::string::npos);
        bEnablePaliumLg = (content.find("\"Enable Palium Lg\": true") != std::string::npos);
        bEnableCoral = (content.find("\"Enable Coral\": true") != std::string::npos);
        bEnableOyster = (content.find("\"Enable Oyster\": true") != std::string::npos);
        bEnableShell = (content.find("\"Enable Shell\": true") != std::string::npos);
        bEnablePoisonFlower = (content.find("\"Enable Poison Flower\": true") != std::string::npos);
        bEnablePoisonFlowerP = (content.find("\"Enable Poison Flower P\": true") != std::string::npos);
        bEnableWaterFlower = (content.find("\"Enable Water Flower\": true") != std::string::npos);
        bEnableWaterFlowerP = (content.find("\"Enable Water Flower P\": true") != std::string::npos);
        bEnableHeartdrop = (content.find("\"Enable Heartdrop\": true") != std::string::npos);
        bEnableHeartdropP = (content.find("\"Enable Heartdrop P\": true") != std::string::npos);
        bEnableSundrop = (content.find("\"Enable Sundrop\": true") != std::string::npos);
        bEnableSundropP = (content.find("\"Enable Sundrop P\": true") != std::string::npos);
        bEnableDragonsBeard = (content.find("\"Enable Dragons Beard\": true") != std::string::npos);
        bEnableDragonsBeardP = (content.find("\"Enable Dragons Beard P\": true") != std::string::npos);
        bEnableEmeraldCarpet = (content.find("\"Enable Emerald Carpet\": true") != std::string::npos);
        bEnableEmeraldCarpetP = (content.find("\"Enable Emerald Carpet P\": true") != std::string::npos);
        bEnableMushroomBlue = (content.find("\"Enable Mushroom Blue\": true") != std::string::npos);
        bEnableMushroomBlueP = (content.find("\"Enable Mushroom Blue P\": true") != std::string::npos);
        bEnableMushroomRed = (content.find("\"Enable Mushroom Red\": true") != std::string::npos);
        bEnableMushroomRedP = (content.find("\"Enable Mushroom Red P\": true") != std::string::npos);
        bEnableDariCloves = (content.find("\"Enable Dari Cloves\": true") != std::string::npos);
        bEnableDariClovesP = (content.find("\"Enable Dari Cloves P\": true") != std::string::npos);
        bEnableHeatRoot = (content.find("\"Enable Heat Root\": true") != std::string::npos);
        bEnableHeatRootP = (content.find("\"Enable Heat Root P\": true") != std::string::npos);
        bEnableSpicedSprouts = (content.find("\"Enable Spiced Sprouts\": true") != std::string::npos);
        bEnableSpicedSproutsP = (content.find("\"Enable Spiced Sprouts P\": true") != std::string::npos);
        bEnableSweetLeaves = (content.find("\"Enable Sweet Leaves\": true") != std::string::npos);
        bEnableSweetLeavesP = (content.find("\"Enable Sweet Leaves P\": true") != std::string::npos);
        bEnableGarlic = (content.find("\"Enable Garlic\": true") != std::string::npos);
        bEnableGarlicP = (content.find("\"Enable Garlic P\": true") != std::string::npos);
        bEnableGinger = (content.find("\"Enable Ginger\": true") != std::string::npos);
        bEnableGingerP = (content.find("\"Enable Ginger P\": true") != std::string::npos);
        bEnableGreenOnion = (content.find("\"Enable Green Onion\": true") != std::string::npos);
        bEnableGreenOnionP = (content.find("\"Enable Green Onion P\": true") != std::string::npos);
        bEnableBeeU = (content.find("\"Enable Bee U\": true") != std::string::npos);
        bEnableBeeUP = (content.find("\"Enable Bee U P\": true") != std::string::npos);
        bEnableBeeR = (content.find("\"Enable Bee R\": true") != std::string::npos);
        bEnableBeeRP = (content.find("\"Enable Bee R P\": true") != std::string::npos);
        bEnableBeetleC = (content.find("\"Enable Beetle C\": true") != std::string::npos);
        bEnableBeetleCP = (content.find("\"Enable Beetle C P\": true") != std::string::npos);
        bEnableBeetleU = (content.find("\"Enable Beetle U\": true") != std::string::npos);
        bEnableBeetleUP = (content.find("\"Enable Beetle U P\": true") != std::string::npos);
        bEnableBeetleR = (content.find("\"Enable Beetle R\": true") != std::string::npos);
        bEnableBeetleRP = (content.find("\"Enable Beetle R P\": true") != std::string::npos);
        bEnableBeetleE = (content.find("\"Enable Beetle E\": true") != std::string::npos);
        bEnableBeetleEP = (content.find("\"Enable Beetle E P\": true") != std::string::npos);
        bEnableButterflyC = (content.find("\"Enable Butterfly C\": true") != std::string::npos);
        bEnableButterflyCP = (content.find("\"Enable Butterfly C P\": true") != std::string::npos);
        bEnableButterflyU = (content.find("\"Enable Butterfly U\": true") != std::string::npos);
        bEnableButterflyUP = (content.find("\"Enable Butterfly U P\": true") != std::string::npos);
        bEnableButterflyR = (content.find("\"Enable Butterfly R\": true") != std::string::npos);
        bEnableButterflyRP = (content.find("\"Enable Butterfly R P\": true") != std::string::npos);
        bEnableButterflyE = (content.find("\"Enable Butterfly E\": true") != std::string::npos);
        bEnableButterflyEP = (content.find("\"Enable Butterfly E P\": true") != std::string::npos);
        bEnableCicadaC = (content.find("\"Enable Cicada C\": true") != std::string::npos);
        bEnableCicadaCP = (content.find("\"Enable Cicada C P\": true") != std::string::npos);
        bEnableCicadaU = (content.find("\"Enable Cicada U\": true") != std::string::npos);
        bEnableCicadaUP = (content.find("\"Enable Cicada U P\": true") != std::string::npos);
        bEnableCicadaR = (content.find("\"Enable Cicada R\": true") != std::string::npos);
        bEnableCicadaRP = (content.find("\"Enable Cicada R P\": true") != std::string::npos);
        bEnableCrabC = (content.find("\"Enable Crab C\": true") != std::string::npos);
        bEnableCrabCP = (content.find("\"Enable Crab C P\": true") != std::string::npos);
        bEnableCrabU = (content.find("\"Enable Crab U\": true") != std::string::npos);
        bEnableCrabUP = (content.find("\"Enable Crab U P\": true") != std::string::npos);
        bEnableCrabR = (content.find("\"Enable Crab R\": true") != std::string::npos);
        bEnableCrabRP = (content.find("\"Enable Crab R P\": true") != std::string::npos);
        bEnableCricketC = (content.find("\"Enable Cricket C\": true") != std::string::npos);
        bEnableCricketCP = (content.find("\"Enable Cricket C P\": true") != std::string::npos);
        bEnableCricketU = (content.find("\"Enable Cricket U\": true") != std::string::npos);
        bEnableCricketUP = (content.find("\"Enable Cricket U P\": true") != std::string::npos);
        bEnableCricketR = (content.find("\"Enable Cricket R\": true") != std::string::npos);
        bEnableCricketRP = (content.find("\"Enable Cricket R P\": true") != std::string::npos);
        bEnableDragonflyC = (content.find("\"Enable Dragonfly C\": true") != std::string::npos);
        bEnableDragonflyCP = (content.find("\"Enable Dragonfly C P\": true") != std::string::npos);
        bEnableDragonflyU = (content.find("\"Enable Dragonfly U\": true") != std::string::npos);
        bEnableDragonflyUP = (content.find("\"Enable Dragonfly U P\": true") != std::string::npos);
        bEnableDragonflyR = (content.find("\"Enable Dragonfly R\": true") != std::string::npos);
        bEnableDragonflyRP = (content.find("\"Enable Dragonfly R P\": true") != std::string::npos);
        bEnableDragonflyE = (content.find("\"Enable Dragonfly E\": true") != std::string::npos);
        bEnableDragonflyEP = (content.find("\"Enable Dragonfly E P\": true") != std::string::npos);
        bEnableGlowbugC = (content.find("\"Enable Glowbug C\": true") != std::string::npos);
        bEnableGlowbugCP = (content.find("\"Enable Glowbug C P\": true") != std::string::npos);
        bEnableGlowbugU = (content.find("\"Enable Glowbug U\": true") != std::string::npos);
        bEnableGlowbugUP = (content.find("\"Enable Glowbug U P\": true") != std::string::npos);
        bEnableLadybugC = (content.find("\"Enable Ladybug C\": true") != std::string::npos);
        bEnableLadybugCP = (content.find("\"Enable Ladybug C P\": true") != std::string::npos);
        bEnableLadybugU = (content.find("\"Enable Ladybug U\": true") != std::string::npos);
        bEnableLadybugUP = (content.find("\"Enable Ladybug U P\": true") != std::string::npos);
        bEnableMantisU = (content.find("\"Enable Mantis U\": true") != std::string::npos);
        bEnableMantisUP = (content.find("\"Enable Mantis U P\": true") != std::string::npos);
        bEnableMantisR = (content.find("\"Enable Mantis R\": true") != std::string::npos);
        bEnableMantisRP = (content.find("\"Enable Mantis R P\": true") != std::string::npos);
        bEnableMantisR2 = (content.find("\"Enable Mantis R2\": true") != std::string::npos);
        bEnableMantisR2P = (content.find("\"Enable Mantis R2 P\": true") != std::string::npos);
        bEnableMantisE = (content.find("\"Enable Mantis E\": true") != std::string::npos);
        bEnableMantisEP = (content.find("\"Enable Mantis E P\": true") != std::string::npos);
        bEnableMothC = (content.find("\"Enable Moth C\": true") != std::string::npos);
        bEnableMothCP = (content.find("\"Enable Moth C P\": true") != std::string::npos);
        bEnableMothU = (content.find("\"Enable Moth U\": true") != std::string::npos);
        bEnableMothUP = (content.find("\"Enable Moth U P\": true") != std::string::npos);
        bEnableMothR = (content.find("\"Enable Moth R\": true") != std::string::npos);
        bEnableMothRP = (content.find("\"Enable Moth R P\": true") != std::string::npos);
        bEnablePedeU = (content.find("\"Enable Pede U\": true") != std::string::npos);
        bEnablePedeUP = (content.find("\"Enable Pede U P\": true") != std::string::npos);
        bEnablePedeR = (content.find("\"Enable Pede R\": true") != std::string::npos);
        bEnablePedeRP = (content.find("\"Enable Pede R P\": true") != std::string::npos);
        bEnablePedeR2 = (content.find("\"Enable Pede R2\": true") != std::string::npos);
        bEnablePedeR2P = (content.find("\"Enable Pede R2 P\": true") != std::string::npos);
        bEnableSnailU = (content.find("\"Enable Snail U\": true") != std::string::npos);
        bEnableSnailUP = (content.find("\"Enable Snail U P\": true") != std::string::npos);
        bEnableSnailR = (content.find("\"Enable Snail R\": true") != std::string::npos);
        bEnableSnailRP = (content.find("\"Enable Snail R P\": true") != std::string::npos);
        bEnableBushSm = (content.find("\"Enable Bush Sm\": true") != std::string::npos);
        bEnableSapwoodSm = (content.find("\"Enable Sapwood Sm\": true") != std::string::npos);
        bEnableSapwoodMed = (content.find("\"Enable Sapwood Med\": true") != std::string::npos);
        bEnableSapwoodLg = (content.find("\"Enable Sapwood Lg\": true") != std::string::npos);
        bEnableHeartwoodSm = (content.find("\"Enable Heartwood Sm\": true") != std::string::npos);
        bEnableHeartwoodMed = (content.find("\"Enable Heartwood Med\": true") != std::string::npos);
        bEnableHeartwoodLg = (content.find("\"Enable Heartwood Lg\": true") != std::string::npos);
        bEnableFlowSm = (content.find("\"Enable Flow Sm\": true") != std::string::npos);
        bEnableFlowMed = (content.find("\"Enable Flow Med\": true") != std::string::npos);
        bEnableFlowLg = (content.find("\"Enable Flow Lg\": true") != std::string::npos);
        bEnablePlayers = (content.find("\"Enable Players\": true") != std::string::npos);
        bEnableNPC = (content.find("\"Enable NPC\": true") != std::string::npos);
        bEnableFish = (content.find("\"Enable Fish\": true") != std::string::npos);
        bEnablePools = (content.find("\"Enable Pools\": true") != std::string::npos);
        bEnableLoot = (content.find("\"Enable Loot\": true") != std::string::npos);
        bEnableQuest = (content.find("\"Enable Quest\": true") != std::string::npos);
        bEnableRummagePiles = (content.find("\"Enable Rummage Piles\": true") != std::string::npos);
        bEnableStables = (content.find("\"Enable Stables\": true") != std::string::npos);
        bEnableOthers = (content.find("\"Enable Others\": true") != std::string::npos);

        Overlay->Singles[static_cast<int>(EOneOffs::Player)] = bEnablePlayers;
        Overlay->Singles[static_cast<int>(EOneOffs::NPC)] = bEnableNPC;
        Overlay->Fish[static_cast<int>(EFishType::Hook)] = bEnableFish;
        Overlay->Fish[static_cast<int>(EFishType::Node)] = bEnablePools;
        Overlay->Singles[static_cast<int>(EOneOffs::Loot)] = bEnableLoot;
        Overlay->Singles[static_cast<int>(EOneOffs::Quest)] = bEnableQuest;
        Overlay->Singles[static_cast<int>(EOneOffs::RummagePiles)] = bEnableRummagePiles;
        Overlay->Singles[static_cast<int>(EOneOffs::Stables)] = bEnableStables;
        Overlay->bVisualizeDefault = bEnableOthers;

        Overlay->bFishingNoDurability = bFishingNoDurability;
        Overlay->bFishingMultiplayerHelp = bFishingMultiplayerHelp;
        Overlay->bFishingPerfectCatch = bFishingPerfectCatch;
        Overlay->bFishingInstantCatch = bFishingInstantCatch;
        Overlay->bFishingSell = bFishingSell;
        Overlay->bFishingDiscard = bFishingDiscard;
        Overlay->bFishingOpenStoreWaterlogged = bFishingOpenStoreWaterlogged;

        Overlay->Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier1)] = bEnableSernuk;
        Overlay->Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier2)] = bEnableElderSernuk;
        Overlay->Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier3)] = bEnableProudhornSernuk;
        Overlay->Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier1)] = bEnableChapaa;
        Overlay->Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier2)] = bEnableStripedChapaa;
        Overlay->Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier3)] = bEnableAzureChapaa;
        Overlay->Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Chase)] = bEnableMinigameChapaa;
        Overlay->Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier1)] = bEnableMuujin;
        Overlay->Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier2)] = bEnableBandedMuujin;
        Overlay->Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier3)] = bEnableBluebristleMuujin;

        Overlay->Ores[static_cast<int>(EOreType::Clay)][static_cast<int>(EGatherableSize::Large)] = bEnableClayLg;
        Overlay->Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Small)] = bEnableStoneSm;
        Overlay->Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Medium)] = bEnableStoneMed;
        Overlay->Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Large)] = bEnableStoneLg;

        Overlay->Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Small)] = bEnableCopperSm;
        Overlay->Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Medium)] = bEnableCopperMed;
        Overlay->Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Large)] = bEnableCopperLg;

        Overlay->Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Small)] = bEnableIronSm;
        Overlay->Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Medium)] = bEnableIronMed;
        Overlay->Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Large)] = bEnableIronLg;

        Overlay->Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Small)] = bEnablePaliumSm;
        Overlay->Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Medium)] = bEnablePaliumMed;
        Overlay->Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Large)] = bEnablePaliumLg;

        Overlay->Forageables[static_cast<int>(EForageableType::Coral)][0] = bEnableCoral;
        Overlay->Forageables[static_cast<int>(EForageableType::Oyster)][0] = bEnableOyster;
        Overlay->Forageables[static_cast<int>(EForageableType::Shell)][0] = bEnableShell;
        Overlay->Forageables[static_cast<int>(EForageableType::PoisonFlower)][0] = bEnablePoisonFlower;
        Overlay->Forageables[static_cast<int>(EForageableType::PoisonFlower)][1] = bEnablePoisonFlowerP;
        Overlay->Forageables[static_cast<int>(EForageableType::WaterFlower)][0] = bEnableWaterFlower;
        Overlay->Forageables[static_cast<int>(EForageableType::WaterFlower)][1] = bEnableWaterFlowerP;
        Overlay->Forageables[static_cast<int>(EForageableType::Heartdrop)][0] = bEnableHeartdrop;
        Overlay->Forageables[static_cast<int>(EForageableType::Heartdrop)][1] = bEnableHeartdropP;
        Overlay->Forageables[static_cast<int>(EForageableType::Sundrop)][0] = bEnableSundrop;
        Overlay->Forageables[static_cast<int>(EForageableType::Sundrop)][1] = bEnableSundropP;
        Overlay->Forageables[static_cast<int>(EForageableType::DragonsBeard)][0] = bEnableDragonsBeard;
        Overlay->Forageables[static_cast<int>(EForageableType::DragonsBeard)][1] = bEnableDragonsBeardP;
        Overlay->Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][0] = bEnableEmeraldCarpet;
        Overlay->Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][1] = bEnableEmeraldCarpetP;
        Overlay->Forageables[static_cast<int>(EForageableType::MushroomBlue)][0] = bEnableMushroomBlue;
        Overlay->Forageables[static_cast<int>(EForageableType::MushroomBlue)][1] = bEnableMushroomBlueP;
        Overlay->Forageables[static_cast<int>(EForageableType::MushroomRed)][0] = bEnableMushroomRed;
        Overlay->Forageables[static_cast<int>(EForageableType::MushroomRed)][1] = bEnableMushroomRedP;
        Overlay->Forageables[static_cast<int>(EForageableType::DariCloves)][0] = bEnableDariCloves;
        Overlay->Forageables[static_cast<int>(EForageableType::DariCloves)][1] = bEnableDariClovesP;
        Overlay->Forageables[static_cast<int>(EForageableType::HeatRoot)][0] = bEnableHeatRoot;
        Overlay->Forageables[static_cast<int>(EForageableType::HeatRoot)][1] = bEnableHeatRootP;
        Overlay->Forageables[static_cast<int>(EForageableType::SpicedSprouts)][0] = bEnableSpicedSprouts;
        Overlay->Forageables[static_cast<int>(EForageableType::SpicedSprouts)][1] = bEnableSpicedSproutsP;
        Overlay->Forageables[static_cast<int>(EForageableType::SweetLeaves)][0] = bEnableSweetLeaves;
        Overlay->Forageables[static_cast<int>(EForageableType::SweetLeaves)][1] = bEnableSweetLeavesP;
        Overlay->Forageables[static_cast<int>(EForageableType::Garlic)][0] = bEnableGarlic;
        Overlay->Forageables[static_cast<int>(EForageableType::Garlic)][1] = bEnableGarlicP;
        Overlay->Forageables[static_cast<int>(EForageableType::Ginger)][0] = bEnableGinger;
        Overlay->Forageables[static_cast<int>(EForageableType::Ginger)][1] = bEnableGingerP;
        Overlay->Forageables[static_cast<int>(EForageableType::GreenOnion)][0] = bEnableGreenOnion;
        Overlay->Forageables[static_cast<int>(EForageableType::GreenOnion)][1] = bEnableGreenOnionP;

        Overlay->Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableBeeU;
        Overlay->Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableBeeUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][0] = bEnableBeeR;
        Overlay->Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][1] = bEnableBeeRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][0] = bEnableBeetleC;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][1] = bEnableBeetleCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableBeetleU;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableBeetleUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][0] = bEnableBeetleR;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][1] = bEnableBeetleRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][0] = bEnableBeetleE;
        Overlay->Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][1] = bEnableBeetleEP;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][0] = bEnableButterflyC;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][1] = bEnableButterflyCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableButterflyU;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableButterflyUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][0] = bEnableButterflyR;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][1] = bEnableButterflyRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][0] = bEnableButterflyE;
        Overlay->Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][1] = bEnableButterflyEP;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][0] = bEnableCicadaC;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][1] = bEnableCicadaCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableCicadaU;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableCicadaUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][0] = bEnableCicadaR;
        Overlay->Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][1] = bEnableCicadaRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][0] = bEnableCrabC;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][1] = bEnableCrabCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableCrabU;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableCrabUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][0] = bEnableCrabR;
        Overlay->Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][1] = bEnableCrabRP;

        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][0] = bEnableCricketC;
        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][1] = bEnableCricketCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableCricketU;
        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableCricketUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][0] = bEnableCricketR;
        Overlay->Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][1] = bEnableCricketRP;

        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][0] = bEnableDragonflyC;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][1] = bEnableDragonflyCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableDragonflyU;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableDragonflyUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][0] = bEnableDragonflyR;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][1] = bEnableDragonflyRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][0] = bEnableDragonflyE;
        Overlay->Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][1] = bEnableDragonflyEP;

        Overlay->Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][0] = bEnableGlowbugC;
        Overlay->Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][1] = bEnableGlowbugCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableGlowbugU;
        Overlay->Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableGlowbugUP;

        Overlay->Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][0] = bEnableLadybugC;
        Overlay->Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][1] = bEnableLadybugCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableLadybugU;
        Overlay->Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableLadybugUP;

        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableMantisU;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableMantisUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][0] = bEnableMantisR;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][1] = bEnableMantisRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][0] = bEnableMantisR2;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][1] = bEnableMantisR2P;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][0] = bEnableMantisE;
        Overlay->Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][1] = bEnableMantisEP;

        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][0] = bEnableMothC;
        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][1] = bEnableMothCP;
        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableMothU;
        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableMothUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][0] = bEnableMothR;
        Overlay->Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][1] = bEnableMothRP;

        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnablePedeU;
        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnablePedeUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][0] = bEnablePedeR;
        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][1] = bEnablePedeRP;
        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][0] = bEnablePedeR2;
        Overlay->Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][1] = bEnablePedeR2P;

        Overlay->Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][0] = bEnableSnailU;
        Overlay->Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][1] = bEnableSnailUP;
        Overlay->Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][0] = bEnableSnailR;
        Overlay->Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][1] = bEnableSnailRP;

        Overlay->Trees[static_cast<int>(ETreeType::Bush)][static_cast<int>(EGatherableSize::Bush)] = bEnableBushSm;

        Overlay->Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Small)] = bEnableSapwoodSm;
        Overlay->Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Medium)] = bEnableSapwoodMed;
        Overlay->Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Large)] = bEnableSapwoodLg;

        Overlay->Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Small)] = bEnableHeartwoodSm;
        Overlay->Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Medium)] = bEnableHeartwoodMed;
        Overlay->Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Large)] = bEnableHeartwoodLg;

        Overlay->Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Small)] = bEnableFlowSm;
        Overlay->Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Medium)] = bEnableFlowMed;
        Overlay->Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Large)] = bEnableFlowLg;
        
        std::size_t pos = content.find("\"Window Size X\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789", pos);
            std::size_t end = content.find_first_not_of("0123456789", start);
            windowSizeX = std::stoi(content.substr(start, end - start));
        }

        pos = content.find("\"Window Size Y\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789", pos);
            std::size_t end = content.find_first_not_of("0123456789", start);
            windowSizeY = std::stoi(content.substr(start, end - start));
        }

        pos = content.find("\"Distance\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789", pos);
            std::size_t end = content.find_first_not_of("0123456789", start);
            CullDistance = std::stoi(content.substr(start, end - start));
        }

        pos = content.find("\"ESP Text Scale\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            ESPTextScale = std::stof(content.substr(start, end - start));
        }

        bDrawFOVCircle = (content.find("\"Enable InteliAim Circle\": true") != std::string::npos);
        pos = content.find("\"InteliAim Radius\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            FOVRadius = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Walk Speed\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomWalkSpeed = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Sprint Speed Multiplier\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomSprintSpeedMultiplier = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Climbing Speed\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomClimbingSpeed = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Gliding Speed\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomGlidingSpeed = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Gliding Fall Speed\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomGlidingFallSpeed = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Jump Velocity\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomJumpVelocity = std::stof(content.substr(start, end - start));
        }

        pos = content.find("\"Custom Max Step Height\":");
        if (pos != std::string::npos) {
            std::size_t start = content.find_first_of("0123456789.", pos);
            std::size_t end = content.find_first_not_of("0123456789.", start);
            CustomMaxStepHeight = std::stof(content.substr(start, end - start));
        }

        return true;
    }
    return false;
}

std::map<int, std::string> PaliaOverlay::CreatureQualityNames = {
    {0, "Unknown"},
    {1, "T1"},
    {2, "T2"},
    {3, "T3"},
    {4, "Chase"}
};
std::map<int, std::string> PaliaOverlay::BugQualityNames = {
    {0, "Unknown"},
    {1, "Common"},
    {2, "Uncommon"},
    {3, "Rare"},
    {4, "Rare2"},
    {5, "Epic"}
};
std::map<int, std::string> PaliaOverlay::GatherableSizeNames = {
    {0, "Unknown"},
    {1, "Sm"},
    {2, "Md"},
    {3, "Lg"},
    {4, "Bush"}
};

void PaliaOverlay::SetupColors() {
    // Forageable colors
    for (const int pos : ForageableCommon) {
        ForageableColors[pos] = IM_COL32(0xCD, 0xCD, 0xCD, 0xFF); // Light Gray
    }
    for (const int pos : ForageableUncommon) {
        ForageableColors[pos] = IM_COL32(0x32, 0xCD, 0x32, 0xFF); // Lime Green
    }
    for (const int pos : ForageableRare) {
        ForageableColors[pos] = IM_COL32(0x1E, 0x90, 0xFF, 0xFF); // Dodger Blue
    }
    for (const int pos : ForageableEpic) {
        ForageableColors[pos] = IM_COL32(0xFF, 0xD7, 0x00, 0xFF); // Gold
    }

    // Animal colors
    for (auto& AnimalColor : AnimalColors) {
        AnimalColor[static_cast<int>(ECreatureQuality::Tier1)] = IM_COL32(0xCD, 0xCD, 0xCD, 0xFF); // Light Gray
        AnimalColor[static_cast<int>(ECreatureQuality::Tier2)] = IM_COL32(0x32, 0xCD, 0x32, 0xFF); // Lime Green
        AnimalColor[static_cast<int>(ECreatureQuality::Tier3)] = IM_COL32(0x1E, 0x90, 0xFF, 0xFF); // Dodger Blue
        AnimalColor[static_cast<int>(ECreatureQuality::Chase)] = IM_COL32(0xFF, 0xD7, 0x00, 0xFF); // Gold
    }

    // Bug colors
    for (auto& BugColor : BugColors) {
        BugColor[static_cast<int>(EBugQuality::Common)] = IM_COL32(0xCD, 0xCD, 0xCD, 0xFF); // Light Gray
        BugColor[static_cast<int>(EBugQuality::Uncommon)] = IM_COL32(0x32, 0xCD, 0x32, 0xFF); // Lime Green
        BugColor[static_cast<int>(EBugQuality::Rare)] = IM_COL32(0x1E, 0x90, 0xFF, 0xFF); // Dodger Blue
        BugColor[static_cast<int>(EBugQuality::Rare2)] = IM_COL32(0x00, 0xBF, 0xFF, 0xFF); // Deep Sky Blue
        BugColor[static_cast<int>(EBugQuality::Epic)] = IM_COL32(0xFF, 0xD7, 0x00, 0xFF); // Gold
    }

    // Player & Entities colors
    SingleColors[static_cast<int>(EOneOffs::Player)] = IM_COL32(0xFF, 0x63, 0x47, 0xFF); // Tomato Red
    SingleColors[static_cast<int>(EOneOffs::NPC)] = IM_COL32(0xDE, 0xB8, 0x87, 0xFF); // Burly Wood
    SingleColors[static_cast<int>(EOneOffs::Loot)] = IM_COL32(0xEE, 0x82, 0xEE, 0xFF); // Violet
    SingleColors[static_cast<int>(EOneOffs::Quest)] = IM_COL32(0xFF, 0xA5, 0x00, 0xFF); // Orange
    SingleColors[static_cast<int>(EOneOffs::RummagePiles)] = IM_COL32(0xFF, 0x45, 0x00, 0xFF); // Orange Red
    SingleColors[static_cast<int>(EOneOffs::Others)] = IM_COL32(0xFF, 0xFF, 0xFF, 0xFF); // White

    // Define a different color for Stables
    SingleColors[static_cast<int>(EOneOffs::Stables)] = IM_COL32(0x8B, 0x45, 0x13, 0xFF); // Saddle Brown
};

AValeriaCharacter* GetValeriaData() {
    AValeriaCharacter* ValeriaCharacter = GetValeriaCharacter();
    if (UWorld* World = GetWorld()) {
        if (UGameInstance* GameInstance = World->OwningGameInstance; GameInstance && GameInstance->LocalPlayers.Num() > 0) {
            if (ULocalPlayer* LocalPlayer = GameInstance->LocalPlayers[0]) {
                if (APlayerController* PlayerController = LocalPlayer->PlayerController) {
                    if (PlayerController && PlayerController->Pawn) {
                        ValeriaCharacter = static_cast<AValeriaPlayerController*>(PlayerController)->GetValeriaCharacter();
                    }
                }
            }
        }
    }
    return ValeriaCharacter;
}

void PaliaOverlay::DrawHUD() {
    PaliaOverlay* Overlay = static_cast<PaliaOverlay*>(OverlayBase::Instance);

    // Loading configuration or setting defaults
    if (!LoadConfiguration(Overlay->bEnableAntiAfk, Overlay->bEnableSilentAimbot, Overlay->bEnableAimbot, Overlay->bTeleportToTargeted, Overlay->bEnableWaypointTeleport, Overlay->bAvoidTeleportingToPlayers, Overlay->bEnableLootbagTeleportation, Overlay->bEnableESP, Overlay->ESPTextScale, Overlay->bEnableESPCulling, Overlay->CullDistance, Overlay->bDrawFOVCircle, Overlay->FOVRadius, Overlay->bFishingNoDurability, Overlay->bFishingMultiplayerHelp, Overlay->bFishingPerfectCatch, Overlay->bFishingInstantCatch, Overlay->bFishingSell, Overlay->bFishingDiscard, Overlay->bFishingOpenStoreWaterlogged, Overlay->bRequireClickFishing, Overlay->CustomWalkSpeed, Overlay->CustomSprintSpeedMultiplier, Overlay->CustomClimbingSpeed, Overlay->CustomGlidingSpeed, Overlay->CustomGlidingFallSpeed, Overlay->CustomJumpVelocity, Overlay->CustomMaxStepHeight, Overlay->bPlaceAnywhere, Overlay->bEnableSernuk, Overlay->bEnableElderSernuk, Overlay->bEnableProudhornSernuk, Overlay->bEnableChapaa, Overlay->bEnableStripedChapaa, Overlay->bEnableAzureChapaa, Overlay->bEnableMinigameChapaa, Overlay->bEnableMuujin, Overlay->bEnableBandedMuujin, Overlay->bEnableBluebristleMuujin, Overlay->bEnableClayLg, Overlay->bEnableStoneSm, Overlay->bEnableStoneMed, Overlay->bEnableStoneLg, Overlay->bEnableCopperSm, Overlay->bEnableCopperMed, Overlay->bEnableCopperLg, Overlay->bEnableIronSm, Overlay->bEnableIronMed, Overlay->bEnableIronLg, Overlay->bEnablePaliumSm, Overlay->bEnablePaliumMed, Overlay->bEnablePaliumLg, Overlay->bEnableCoral, Overlay->bEnableOyster, Overlay->bEnableShell, Overlay->bEnablePoisonFlower, Overlay->bEnablePoisonFlowerP, Overlay->bEnableWaterFlower, Overlay->bEnableWaterFlowerP, Overlay->bEnableHeartdrop, Overlay->bEnableHeartdropP, Overlay->bEnableSundrop, Overlay->bEnableSundropP, Overlay->bEnableDragonsBeard, Overlay->bEnableDragonsBeardP, Overlay->bEnableEmeraldCarpet, Overlay->bEnableEmeraldCarpetP, Overlay->bEnableMushroomBlue, Overlay->bEnableMushroomBlueP, Overlay->bEnableMushroomRed, Overlay->bEnableMushroomRedP, Overlay->bEnableDariCloves, Overlay->bEnableDariClovesP, Overlay->bEnableHeatRoot, Overlay->bEnableHeatRootP, Overlay->bEnableSpicedSprouts, Overlay->bEnableSpicedSproutsP, Overlay->bEnableSweetLeaves, Overlay->bEnableSweetLeavesP, Overlay->bEnableGarlic, Overlay->bEnableGarlicP, Overlay->bEnableGinger, Overlay->bEnableGingerP, Overlay->bEnableGreenOnion, Overlay->bEnableGreenOnionP, Overlay->bEnableBeeU, Overlay->bEnableBeeUP, Overlay->bEnableBeeR, Overlay->bEnableBeeRP, Overlay->bEnableBeetleC, Overlay->bEnableBeetleCP, Overlay->bEnableBeetleU, Overlay->bEnableBeetleUP, Overlay->bEnableBeetleR, Overlay->bEnableBeetleRP, Overlay->bEnableBeetleE, Overlay->bEnableBeetleEP, Overlay->bEnableButterflyC, Overlay->bEnableButterflyCP, Overlay->bEnableButterflyU, Overlay->bEnableButterflyUP, Overlay->bEnableButterflyR, Overlay->bEnableButterflyRP, Overlay->bEnableButterflyE, Overlay->bEnableButterflyEP, Overlay->bEnableCicadaC, Overlay->bEnableCicadaCP, Overlay->bEnableCicadaU, Overlay->bEnableCicadaUP, Overlay->bEnableCicadaR, Overlay->bEnableCicadaRP, Overlay->bEnableCrabC, Overlay->bEnableCrabCP, Overlay->bEnableCrabU, Overlay->bEnableCrabUP, Overlay->bEnableCrabR, Overlay->bEnableCrabRP, Overlay->bEnableCricketC, Overlay->bEnableCricketCP, Overlay->bEnableCricketU, Overlay->bEnableCricketUP, Overlay->bEnableCricketR, Overlay->bEnableCricketRP, Overlay->bEnableDragonflyC, Overlay->bEnableDragonflyCP, Overlay->bEnableDragonflyU, Overlay->bEnableDragonflyUP, Overlay->bEnableDragonflyR, Overlay->bEnableDragonflyRP, Overlay->bEnableDragonflyE, Overlay->bEnableDragonflyEP, Overlay->bEnableGlowbugC, Overlay->bEnableGlowbugCP, Overlay->bEnableGlowbugU, Overlay->bEnableGlowbugUP, Overlay->bEnableLadybugC, Overlay->bEnableLadybugCP, Overlay->bEnableLadybugU, Overlay->bEnableLadybugUP, Overlay->bEnableMantisU, Overlay->bEnableMantisUP, Overlay->bEnableMantisR, Overlay->bEnableMantisRP, Overlay->bEnableMantisR2, Overlay->bEnableMantisR2P, Overlay->bEnableMantisE, Overlay->bEnableMantisEP, Overlay->bEnableMothC, Overlay->bEnableMothCP, Overlay->bEnableMothU, Overlay->bEnableMothUP, Overlay->bEnableMothR, Overlay->bEnableMothRP, Overlay->bEnablePedeU, Overlay->bEnablePedeUP, Overlay->bEnablePedeR, Overlay->bEnablePedeRP, Overlay->bEnablePedeR2, Overlay->bEnablePedeR2P, Overlay->bEnableSnailU, Overlay->bEnableSnailUP, Overlay->bEnableSnailR, Overlay->bEnableSnailRP, Overlay->bEnableBushSm, Overlay->bEnableSapwoodSm, Overlay->bEnableSapwoodMed, Overlay->bEnableSapwoodLg, Overlay->bEnableHeartwoodSm, Overlay->bEnableHeartwoodMed, Overlay->bEnableHeartwoodLg, Overlay->bEnableFlowSm, Overlay->bEnableFlowMed, Overlay->bEnableFlowLg, Overlay->bEnablePlayers, Overlay->bEnableNPC, Overlay->bEnableFish, Overlay->bEnablePools, Overlay->bEnableLoot, Overlay->bEnableQuest, Overlay->bEnableRummagePiles, Overlay->bEnableStables, Overlay->bEnableOthers, Overlay->windowSizeX, Overlay->windowSizeY)) {
        Overlay->windowSizeX = Overlay->defaultWindowSizeX;
        Overlay->windowSizeY = Overlay->defaultWindowSizeY;

        Overlay->bEnableAntiAfk = Overlay->defaultbEnableAntiAfk;

        Overlay->bEnableSilentAimbot = Overlay->defaultEnableSilentAimbot;
        Overlay->bEnableAimbot = Overlay->defaultEnableAimbot;

        Overlay->bTeleportToTargeted = Overlay->defaultTeleportToTargeted;
        Overlay->bEnableWaypointTeleport = Overlay->defaultWaypointTeleport;
        Overlay->bAvoidTeleportingToPlayers = Overlay->defaultAvoidTeleportingToPlayers;
        Overlay->bEnableLootbagTeleportation = Overlay->defaultEnableLootbagTeleportation;

        Overlay->bEnableESP = Overlay->defaultEnableESP;
        Overlay->bEnableESPCulling = Overlay->defaultEnableESPCulling;
        Overlay->CullDistance = Overlay->defaultCullDistance;
        Overlay->bDrawFOVCircle = Overlay->defaultDrawFOVCircle;
        Overlay->FOVRadius = Overlay->defaultFOVRadius;

        Overlay->bFishingNoDurability = Overlay->defaultbFishingNoDurability;
        Overlay->bFishingMultiplayerHelp = Overlay->defaultbFishingMultiplayerHelp;
        Overlay->bFishingInstantCatch = Overlay->defaultbFishingInstantCatch;
        Overlay->bFishingPerfectCatch = Overlay->defaultbFishingPerfectCatch;
        Overlay->bFishingSell = Overlay->defaultbFishingSell;
        Overlay->bFishingDiscard = Overlay->defaultbFishingDiscard;
        Overlay->bFishingOpenStoreWaterlogged = Overlay->defaultbFishingOpenStoreWaterlogged;
        Overlay->bRequireClickFishing = Overlay->defaultbRequireClickFishing;

        Overlay->bPlaceAnywhere = Overlay->defaultPlaceAnywhere;

        Overlay->CustomWalkSpeed = Overlay->WalkSpeed;
        Overlay->CustomSprintSpeedMultiplier = Overlay->SprintSpeedMultiplier;
        Overlay->CustomClimbingSpeed = Overlay->ClimbingSpeed;
        Overlay->CustomGlidingSpeed = Overlay->GlidingSpeed;
        Overlay->CustomGlidingFallSpeed = Overlay->GlidingFallSpeed;
        Overlay->CustomJumpVelocity = Overlay->JumpVelocity;
        Overlay->CustomMaxStepHeight = Overlay->MaxStepHeight;

        Overlay->bEnableSernuk = Overlay->defaultbEnableSernuk;
        Overlay->bEnableElderSernuk = Overlay->defaultbEnableElderSernuk;
        Overlay->bEnableProudhornSernuk = Overlay->defaultbEnableProudhornSernuk;
        Overlay->bEnableChapaa = Overlay->defaultbEnableChapaa;
        Overlay->bEnableStripedChapaa = Overlay->defaultbEnableStripedChapaa;
        Overlay->bEnableAzureChapaa = Overlay->defaultbEnableAzureChapaa;
        Overlay->bEnableMinigameChapaa = Overlay->defaultbEnableMinigameChapaa;
        Overlay->bEnableMuujin = Overlay->defaultbEnableMuujin;
        Overlay->bEnableBandedMuujin = Overlay->defaultbEnableBandedMuujin;
        Overlay->bEnableBluebristleMuujin = Overlay->defaultbEnableBluebristleMuujin;

        Overlay->bEnableClayLg = Overlay->defaultbEnableClayLg;
        Overlay->bEnableStoneSm = Overlay->defaultbEnableStoneSm;
        Overlay->bEnableStoneMed = Overlay->defaultbEnableStoneMed;
        Overlay->bEnableStoneLg = Overlay->defaultbEnableStoneLg;
        Overlay->bEnableCopperSm = Overlay->defaultbEnableCopperSm;
        Overlay->bEnableCopperMed = Overlay->defaultbEnableCopperMed;
        Overlay->bEnableCopperLg = Overlay->defaultbEnableCopperLg;
        Overlay->bEnableIronSm = Overlay->defaultbEnableIronSm;
        Overlay->bEnableIronMed = Overlay->defaultbEnableIronMed;
        Overlay->bEnableIronLg = Overlay->defaultbEnableIronLg;
        Overlay->bEnablePaliumSm = Overlay->defaultbEnablePaliumSm;
        Overlay->bEnablePaliumMed = Overlay->defaultbEnablePaliumMed;
        Overlay->bEnablePaliumLg = Overlay->defaultbEnablePaliumLg;

        Overlay->bEnableCoral = Overlay->defaultbEnableCoral;
        Overlay->bEnableOyster = Overlay->defaultbEnableOyster;
        Overlay->bEnableShell = Overlay->defaultbEnableShell;

        Overlay->bEnablePoisonFlower = Overlay->defaultbEnablePoisonFlower;
        Overlay->bEnablePoisonFlowerP = Overlay->defaultbEnablePoisonFlowerP;
        Overlay->bEnableWaterFlower = Overlay->defaultbEnableWaterFlower;
        Overlay->bEnableWaterFlowerP = Overlay->defaultbEnableWaterFlowerP;
        Overlay->bEnableHeartdrop = Overlay->defaultbEnableHeartdrop;
        Overlay->bEnableHeartdropP = Overlay->defaultbEnableHeartdropP;
        Overlay->bEnableSundrop = Overlay->defaultbEnableSundrop;
        Overlay->bEnableSundropP = Overlay->defaultbEnableSundropP;

        Overlay->bEnableDragonsBeard = Overlay->defaultbEnableDragonsBeard;
        Overlay->bEnableDragonsBeardP = Overlay->defaultbEnableDragonsBeardP;
        Overlay->bEnableEmeraldCarpet = Overlay->defaultbEnableEmeraldCarpet;
        Overlay->bEnableEmeraldCarpetP = Overlay->defaultbEnableEmeraldCarpetP;

        Overlay->bEnableMushroomBlue = Overlay->defaultbEnableMushroomBlue;
        Overlay->bEnableMushroomBlueP = Overlay->defaultbEnableMushroomBlueP;
        Overlay->bEnableMushroomRed = Overlay->defaultbEnableMushroomRed;
        Overlay->bEnableMushroomRedP = Overlay->defaultbEnableMushroomRedP;

        Overlay->bEnableDariCloves = Overlay->defaultbEnableDariCloves;
        Overlay->bEnableDariClovesP = Overlay->defaultbEnableDariClovesP;
        Overlay->bEnableHeatRoot = Overlay->defaultbEnableHeatRoot;
        Overlay->bEnableHeatRootP = Overlay->defaultbEnableHeatRootP;
        Overlay->bEnableSpicedSprouts = Overlay->defaultbEnableSpicedSprouts;
        Overlay->bEnableSpicedSproutsP = Overlay->defaultbEnableSpicedSproutsP;
        Overlay->bEnableSweetLeaves = Overlay->defaultbEnableSweetLeaves;
        Overlay->bEnableSweetLeavesP = Overlay->defaultbEnableSweetLeavesP;

        Overlay->bEnableGarlic = Overlay->defaultbEnableGarlic;
        Overlay->bEnableGarlicP = Overlay->defaultbEnableGarlicP;
        Overlay->bEnableGinger = Overlay->defaultbEnableGinger;
        Overlay->bEnableGingerP = Overlay->defaultbEnableGingerP;
        Overlay->bEnableGreenOnion = Overlay->defaultbEnableGreenOnion;
        Overlay->bEnableGreenOnionP = Overlay->defaultbEnableGreenOnionP;

        Overlay->bEnableBushSm = Overlay->defaultbEnableBushSm;

        Overlay->bEnableHeartwoodSm = Overlay->defaultbEnableHeartwoodSm;
        Overlay->bEnableHeartwoodMed = Overlay->defaultbEnableHeartwoodMed;
        Overlay->bEnableHeartwoodLg = Overlay->defaultbEnableHeartwoodLg;

        Overlay->bEnableFlowSm = Overlay->defaultbEnableFlowSm;
        Overlay->bEnableFlowMed = Overlay->defaultbEnableFlowMed;
        Overlay->bEnableFlowLg = Overlay->defaultbEnableFlowLg;

        Overlay->bEnableBeeU = Overlay->defaultbEnableBeeU;
        Overlay->bEnableBeeUP = Overlay->defaultbEnableBeeUP;
        Overlay->bEnableBeeR = Overlay->defaultbEnableBeeR;
        Overlay->bEnableBeeRP = Overlay->defaultbEnableBeeRP;

        Overlay->bEnableBeetleC = Overlay->defaultbEnableBeetleC;
        Overlay->bEnableBeetleCP = Overlay->defaultbEnableBeetleCP;
        Overlay->bEnableBeetleU = Overlay->defaultbEnableBeetleU;
        Overlay->bEnableBeetleUP = Overlay->defaultbEnableBeetleUP;
        Overlay->bEnableBeetleR = Overlay->defaultbEnableBeetleR;
        Overlay->bEnableBeetleRP = Overlay->defaultbEnableBeetleRP;
        Overlay->bEnableBeetleE = Overlay->defaultbEnableBeetleE;
        Overlay->bEnableBeetleEP = Overlay->defaultbEnableBeetleEP;
        Overlay->bEnableButterflyC = Overlay->defaultbEnableButterflyC;
        Overlay->bEnableButterflyCP = Overlay->defaultbEnableButterflyCP;
        Overlay->bEnableButterflyU = Overlay->defaultbEnableButterflyU;
        Overlay->bEnableButterflyUP = Overlay->defaultbEnableButterflyUP;
        Overlay->bEnableButterflyR = Overlay->defaultbEnableButterflyR;
        Overlay->bEnableButterflyRP = Overlay->defaultbEnableButterflyRP;
        Overlay->bEnableButterflyE = Overlay->defaultbEnableButterflyE;
        Overlay->bEnableButterflyEP = Overlay->defaultbEnableButterflyEP;

        Overlay->bEnableCicadaC = Overlay->defaultbEnableCicadaC;
        Overlay->bEnableCicadaCP = Overlay->defaultbEnableCicadaCP;
        Overlay->bEnableCicadaU = Overlay->defaultbEnableCicadaU;
        Overlay->bEnableCicadaUP = Overlay->defaultbEnableCicadaUP;
        Overlay->bEnableCicadaR = Overlay->defaultbEnableCicadaR;
        Overlay->bEnableCicadaRP = Overlay->defaultbEnableCicadaRP;

        Overlay->bEnableCrabC = Overlay->defaultbEnableCrabC;
        Overlay->bEnableCrabCP = Overlay->defaultbEnableCrabCP;
        Overlay->bEnableCrabU = Overlay->defaultbEnableCrabU;
        Overlay->bEnableCrabUP = Overlay->defaultbEnableCrabUP;
        Overlay->bEnableCrabR = Overlay->defaultbEnableCrabR;
        Overlay->bEnableCrabRP = Overlay->defaultbEnableCrabRP;

        Overlay->bEnableCricketC = Overlay->defaultbEnableCricketC;
        Overlay->bEnableCricketCP = Overlay->defaultbEnableCricketCP;
        Overlay->bEnableCricketU = Overlay->defaultbEnableCricketU;
        Overlay->bEnableCricketUP = Overlay->defaultbEnableCricketUP;
        Overlay->bEnableCricketR = Overlay->defaultbEnableCricketR;
        Overlay->bEnableCricketRP = Overlay->defaultbEnableCricketRP;

        Overlay->bEnableDragonflyC = Overlay->defaultbEnableDragonflyC;
        Overlay->bEnableDragonflyCP = Overlay->defaultbEnableDragonflyCP;
        Overlay->bEnableDragonflyU = Overlay->defaultbEnableDragonflyU;
        Overlay->bEnableDragonflyUP = Overlay->defaultbEnableDragonflyUP;
        Overlay->bEnableDragonflyR = Overlay->defaultbEnableDragonflyR;
        Overlay->bEnableDragonflyRP = Overlay->defaultbEnableDragonflyRP;
        Overlay->bEnableDragonflyE = Overlay->defaultbEnableDragonflyE;
        Overlay->bEnableDragonflyEP = Overlay->defaultbEnableDragonflyEP;

        Overlay->bEnableGlowbugC = Overlay->defaultbEnableGlowbugC;
        Overlay->bEnableGlowbugCP = Overlay->defaultbEnableGlowbugCP;
        Overlay->bEnableGlowbugU = Overlay->defaultbEnableGlowbugU;
        Overlay->bEnableGlowbugUP = Overlay->defaultbEnableGlowbugUP;

        Overlay->bEnableLadybugC = Overlay->defaultbEnableLadybugC;
        Overlay->bEnableLadybugCP = Overlay->defaultbEnableLadybugCP;
        Overlay->bEnableLadybugU = Overlay->defaultbEnableLadybugU;
        Overlay->bEnableLadybugUP = Overlay->defaultbEnableLadybugUP;

        Overlay->bEnableMantisU = Overlay->defaultbEnableMantisU;
        Overlay->bEnableMantisUP = Overlay->defaultbEnableMantisUP;
        Overlay->bEnableMantisR = Overlay->defaultbEnableMantisR;
        Overlay->bEnableMantisRP = Overlay->defaultbEnableMantisRP;
        Overlay->bEnableMantisR2 = Overlay->defaultbEnableMantisR2;
        Overlay->bEnableMantisR2P = Overlay->defaultbEnableMantisR2P;
        Overlay->bEnableMantisE = Overlay->defaultbEnableMantisE;
        Overlay->bEnableMantisEP = Overlay->defaultbEnableMantisEP;

        Overlay->bEnableMothC = Overlay->defaultbEnableMothC;
        Overlay->bEnableMothCP = Overlay->defaultbEnableMothCP;
        Overlay->bEnableMothU = Overlay->defaultbEnableMothU;
        Overlay->bEnableMothUP = Overlay->defaultbEnableMothUP;
        Overlay->bEnableMothR = Overlay->defaultbEnableMothR;
        Overlay->bEnableMothRP = Overlay->defaultbEnableMothRP;

        Overlay->bEnablePedeU = Overlay->defaultbEnablePedeU;
        Overlay->bEnablePedeUP = Overlay->defaultbEnablePedeUP;
        Overlay->bEnablePedeR = Overlay->defaultbEnablePedeR;
        Overlay->bEnablePedeRP = Overlay->defaultbEnablePedeRP;
        Overlay->bEnablePedeR2 = Overlay->defaultbEnablePedeR2;
        Overlay->bEnablePedeR2P = Overlay->defaultbEnablePedeR2P;

        Overlay->bEnableSnailU = Overlay->defaultbEnableSnailU;
        Overlay->bEnableSnailUP = Overlay->defaultbEnableSnailUP;
        Overlay->bEnableSnailR = Overlay->defaultbEnableSnailR;
        Overlay->bEnableSnailRP = Overlay->defaultbEnableSnailRP;

        Overlay->bEnableBushSm = Overlay->defaultbEnableBushSm;
        Overlay->bEnableSapwoodSm = Overlay->defaultbEnableSapwoodSm;
        Overlay->bEnableSapwoodMed = Overlay->defaultbEnableSapwoodMed;
        Overlay->bEnableSapwoodLg = Overlay->defaultbEnableSapwoodLg;
        Overlay->bEnableHeartwoodSm = Overlay->defaultbEnableHeartwoodSm;
        Overlay->bEnableHeartwoodMed = Overlay->defaultbEnableHeartwoodMed;
        Overlay->bEnableHeartwoodLg = Overlay->defaultbEnableHeartwoodLg;
        Overlay->bEnableFlowSm = Overlay->defaultbEnableFlowSm;
        Overlay->bEnableFlowMed = Overlay->defaultbEnableFlowMed;
        Overlay->bEnableFlowLg = Overlay->defaultbEnableFlowLg;

        Overlay->bEnablePlayers = Overlay->defaultbEnablePlayers;
        Overlay->bEnableNPC = Overlay->defaultbEnableNPC;
        Overlay->bEnableFish = Overlay->defaultbEnableFish;
        Overlay->bEnablePools = Overlay->defaultbEnablePools;
        Overlay->bEnableLoot = Overlay->defaultbEnableLoot;
        Overlay->bEnableQuest = Overlay->defaultbEnableQuest;
        Overlay->bEnableRummagePiles = Overlay->defaultbEnableRummagePiles;
        Overlay->bEnableStables = Overlay->defaultbEnableStables;
        Overlay->bEnableOthers = Overlay->defaultbEnableOthers;
    }

    ImGuiIO& io = ImGui::GetIO();
    io.ConfigFlags |= ImGuiConfigFlags_NavEnableKeyboard; // Enable keyboard navigation once at initialization if possible.

    ImGui::SetNextWindowBgAlpha(0.35f);
    ImGuiStyle& style = ImGui::GetStyle();
    const float prevWindowRounding = style.WindowRounding;
    style.WindowRounding = 5.0f; // Temporary change of style.

    // Calculate watermark text only once, not in the drawing loop.
    std::string watermarkText = "OriginPalia By Wimberton, Void, & The UnknownCheats Community";
    if (CurrentLevel && (CurrentMap == "MAP_PreGame" || CurrentMap == "Unknown")) {
        watermarkText = "Waiting for the game to load...";
    }

    ImGui::SetNextWindowPos(ImVec2((io.DisplaySize.x - ImGui::CalcTextSize(watermarkText.c_str()).x) * 0.5f, 10.0f));
    ImGui::Begin("Watermark", nullptr, ImGuiWindowFlags_NoDecoration | ImGuiWindowFlags_NoMove | ImGuiWindowFlags_AlwaysAutoResize | ImGuiWindowFlags_NoSavedSettings | ImGuiWindowFlags_NoFocusOnAppearing | ImGuiWindowFlags_NoNav);
    ImGui::Text("%s", watermarkText.c_str());
    ImGui::End();

    style.WindowRounding = prevWindowRounding; // Restore style after the temporary change.

    APlayerController* PlayerController = nullptr;
    AValeriaPlayerController* ValeriaController = nullptr;
    AValeriaCharacter* ValeriaCharacter = nullptr;

    if (UWorld* World = GetWorld()) {
        if (UGameInstance* GameInstance = World->OwningGameInstance; GameInstance && GameInstance->LocalPlayers.Num() > 0) {
            if (ULocalPlayer* LocalPlayer = GameInstance->LocalPlayers[0]) {
                if (PlayerController = LocalPlayer->PlayerController; PlayerController && PlayerController->Pawn) {
                    ValeriaController = static_cast<AValeriaPlayerController*>(PlayerController);
                    if (ValeriaController) {
                        ValeriaCharacter = static_cast<AValeriaPlayerController*>(PlayerController)->GetValeriaCharacter();
                    }
                }
            }
        }
    }

    if (ValeriaController) {
        if (UTrackingComponent* TrackingComponent = ValeriaController->GetTrackingComponent(); TrackingComponent != nullptr) {
            gDetourManager.SetupDetour(TrackingComponent);
        }
    }

    // HOOKS
    if (ValeriaCharacter) {

        // INVENTORY COMPONENT
        if (UInventoryComponent* InventoryComponent = ValeriaCharacter->GetInventory(); InventoryComponent != nullptr) {
            gDetourManager.SetupDetour(InventoryComponent);
        }

        // FISHING COMPONENT
        if (UFishingComponent* FishingComponent = ValeriaCharacter->GetFishing(); FishingComponent != nullptr) {
            gDetourManager.SetupDetour(FishingComponent);
        }

        // FIRING COMPONENT
        if (UProjectileFiringComponent* FiringComponent = ValeriaCharacter->GetFiringComponent(); FiringComponent != nullptr) {
            gDetourManager.SetupDetour(FiringComponent);
        }

        // MOVEMENT COMPONENT
        if (UValeriaCharacterMoveComponent* ValeriaMovementComponent = ValeriaCharacter->GetValeriaCharacterMovementComponent(); ValeriaMovementComponent != nullptr) {
            gDetourManager.SetupDetour(ValeriaMovementComponent);
        }

        // PLACEMENT COMPONENT
        if (UPlacementComponent* PlacementComponent = ValeriaCharacter->GetPlacement(); PlacementComponent != nullptr) {
            gDetourManager.SetupDetour(PlacementComponent);
        }
    }

    // HOOKING PROCESSEVENT IN AHUD
    if (PlayerController && HookedClient != PlayerController->MyHUD && PlayerController->MyHUD != nullptr) {
        gDetourManager.SetupDetour(PlayerController->MyHUD);
    }
}

void PaliaOverlay::DrawOverlay() {
    bool show = true;
    const ImGuiIO& io = ImGui::GetIO();
    constexpr ImGuiWindowFlags window_flags = ImGuiWindowFlags_NoCollapse;

    // Calculate the center position for the window
    const auto center_pos = ImVec2(io.DisplaySize.x * 0.5f, io.DisplaySize.y * 0.5f);
    const auto window_size = ImVec2(1450, 950); // Set the initial window size
    const auto window_pos = ImVec2(center_pos.x - window_size.x * 0.5f, center_pos.y - window_size.y * 0.5f);

    // Set the initial window position to the center of the screen
    ImGui::SetNextWindowPos(window_pos, ImGuiCond_FirstUseEver);
    ImGui::SetNextWindowSize(window_size, ImGuiCond_FirstUseEver);
    ImGui::SetNextWindowBgAlpha(0.98f);

    const auto WindowTitle = std::string("OriginPalia V2.6.5 - Game Version 0.180.0");
    PaliaOverlay* Overlay = static_cast<PaliaOverlay*>(OverlayBase::Instance);

    if (ImGui::Begin(WindowTitle.data(), &show, window_flags)) {
        static int OpenTab = 0;

        if (ImGui::IsMouseDragging(0)) {
            windowSizeX = static_cast<int>(ImGui::GetWindowSize().x);
            windowSizeY = static_cast<int>(ImGui::GetWindowSize().y);
            SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
        }

        // Draw tabs
        if (ImGui::BeginTabBar("OverlayTabs")) {
            if (ImGui::BeginTabItem("ESP & Visuals")) {
                OpenTab = 0;
                ImGui::EndTabItem();
            }
            if (ImGui::BeginTabItem("Aimbots & Fun")) {
                OpenTab = 1;
                ImGui::EndTabItem();
            }
            if (ImGui::BeginTabItem("Movement & Teleport")) {
                OpenTab = 2;
                ImGui::EndTabItem();
            }
            if (ImGui::BeginTabItem("Selling & Items")) {
                OpenTab = 3;
                ImGui::EndTabItem();
            }
            if (ImGui::BeginTabItem("Skills & Tools")) {
                OpenTab = 4;
                ImGui::EndTabItem();
            }
            if (ImGui::BeginTabItem("Housing & Decorating")) {
                OpenTab = 5;
                ImGui::EndTabItem();
            }
            ImGui::EndTabBar();
        }

        // ==================================== 0 Visuals & ESPs TAB
        if (OpenTab == 0) {
            ImGui::Columns(3, nullptr, false);

            // Base ESP controls
            if (ImGui::CollapsingHeader("Visual Settings - General##VisualSettingsGeneralHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ImGui::Checkbox("Enable ESP", &bEnableESP)) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }

                if (ImGui::SliderFloat("ESP Text Scale", &ESPTextScale, 0.5f, 3.0f, "%.1f")) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                    ImGui::SetTooltip("Adjust the scale of ESP text size.");

                if (ImGui::Checkbox("Limit Distance", &bEnableESPCulling)) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                    ImGui::SetTooltip("Limit the maximum distance the ESP will render. Turn this down to a low value if you're having performance problems.");
                
                if (bEnableESPCulling && ImGui::InputInt("Distance", &CullDistance)) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }

                if (ImGui::Checkbox("Enable InteliAim Circle", &bDrawFOVCircle)) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                    ImGui::SetTooltip("Enable the smart FOV targeting system. Teleport to actors, enable aimbots, and more.");
                
                if (bDrawFOVCircle && ImGui::SliderFloat("InteliAim Radius", &FOVRadius, 10.0f, 600.0f, "%1.0f")) {
                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
            }

            ImGui::NextColumn();

            if (ImGui::CollapsingHeader("Animals##AnimalsSettingsHeader")) {
                ImGui::BeginTable("Animals", 3);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Show", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Show");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sernuk");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Sernuk", &Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier1)])) {
                        bEnableSernuk = Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier1)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Sernuk", &AnimalColors[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier1)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Elder Sernuk");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ElderSernuk", &Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier2)])) {
                        bEnableElderSernuk = Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier2)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ElderSernuk", &AnimalColors[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier2)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Proudhorn Sernuk");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ProudhornSernuk", &Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier3)])) {
                        bEnableProudhornSernuk = Animals[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier3)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ProudhornSernuk", &AnimalColors[static_cast<int>(ECreatureKind::Cearnuk)][static_cast<int>(ECreatureQuality::Tier3)]);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Show");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Chapaa");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Chapaa", &Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier1)])) {
                        bEnableChapaa = Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier1)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Chapaa", &AnimalColors[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier1)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Striped Chapaa");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##StripedChapaa", &Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier2)])) {
                        bEnableStripedChapaa = Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier2)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##StripedChapaa", &AnimalColors[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier2)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Azure Chapaa");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##AzureChapaa", &Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier3)])) {
                        bEnableAzureChapaa = Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier3)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##AzureChapaa", &AnimalColors[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Tier3)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Minigame Chapaa");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MinigameChapaa", &Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Chase)])) {
                        bEnableMinigameChapaa = Animals[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Chase)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MinigameChapaa", &AnimalColors[static_cast<int>(ECreatureKind::Chapaa)][static_cast<int>(ECreatureQuality::Chase)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Show");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();

                    ImGui::TableNextColumn();
                    ImGui::Text("Muujin");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Muujin", &Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier1)])) {
                        bEnableMuujin = Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier1)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Muujin", &AnimalColors[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier1)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Banded Muujin");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BandedMuujin", &Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier2)])) {
                        bEnableBandedMuujin = Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier2)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BandedMuujin", &AnimalColors[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier2)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Bluebristle Muujin");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BluebristleMuujin", &Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier3)])) {
                        bEnableBluebristleMuujin = Animals[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier3)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BluebristleMuujin", &AnimalColors[static_cast<int>(ECreatureKind::TreeClimber)][static_cast<int>(ECreatureQuality::Tier3)]);
                }
                ImGui::EndTable();
            }
            if (ImGui::CollapsingHeader("Ores##OresSettingsHeader")) {
                ImGui::BeginTable("Ores", 5);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Sm", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Med", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Lg", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sm");
                    ImGui::TableNextColumn();
                    ImGui::Text("Med");
                    ImGui::TableNextColumn();
                    ImGui::Text("Lg");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Clay");
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ClayLg", &Ores[static_cast<int>(EOreType::Clay)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableClayLg = Ores[static_cast<int>(EOreType::Clay)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Clay", &OreColors[static_cast<int>(EOreType::Clay)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Stone");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##StoneSm", &Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableStoneSm = Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##StoneMed", &Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableStoneMed = Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##StoneLg", &Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableStoneLg = Ores[static_cast<int>(EOreType::Stone)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Stone", &OreColors[static_cast<int>(EOreType::Stone)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Copper");
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Small)] = bEnableCopperSm;
                    if (ImGui::Checkbox("##CopperSm", &Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableCopperSm = Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Medium)] = bEnableCopperMed;
                    if (ImGui::Checkbox("##CopperMed", &Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableCopperMed = Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Large)] = bEnableCopperLg;
                    if (ImGui::Checkbox("##CopperLg", &Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableCopperLg = Ores[static_cast<int>(EOreType::Copper)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Copper", &OreColors[static_cast<int>(EOreType::Copper)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Iron");
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Small)] = bEnableIronSm;
                    if (ImGui::Checkbox("##IronSm", &Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableIronSm = Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Medium)] = bEnableIronMed;
                    if (ImGui::Checkbox("##IronMed", &Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableIronMed = Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Large)] = bEnableIronLg;
                    if (ImGui::Checkbox("##IronLg", &Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableIronLg = Ores[static_cast<int>(EOreType::Iron)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Iron", &OreColors[static_cast<int>(EOreType::Iron)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Palium");
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Small)] = bEnablePaliumSm;
                    if (ImGui::Checkbox("##PaliumSm", &Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnablePaliumSm = Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Medium)] = bEnablePaliumMed;
                    if (ImGui::Checkbox("##PaliumMed", &Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnablePaliumMed = Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Large)] = bEnablePaliumLg;
                    if (ImGui::Checkbox("##PaliumLg", &Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnablePaliumLg = Ores[static_cast<int>(EOreType::Palium)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Palium", &OreColors[static_cast<int>(EOreType::Palium)]);
                }
                ImGui::EndTable();
            }
            if (ImGui::CollapsingHeader("Forageables##ForageablesSettingsHeader")) {
                ImGui::Text("Enable all:");
                ImGui::SameLine();

                if (ImGui::Button("Common##Forage")) {
                    for (int pos : ForageableCommon) {
                        Forageables[pos][1] = Forageables[pos][0] = !Forageables[pos][0];
                    }

                    bEnableOyster = Forageables[static_cast<int>(EForageableType::Oyster)][0];
                    bEnableShell = Forageables[static_cast<int>(EForageableType::Shell)][0];
                    bEnableSundrop = Forageables[static_cast<int>(EForageableType::Sundrop)][0];
                    bEnableSundropP = Forageables[static_cast<int>(EForageableType::Sundrop)][1];
                    bEnableMushroomRed = Forageables[static_cast<int>(EForageableType::MushroomRed)][0];
                    bEnableMushroomRedP = Forageables[static_cast<int>(EForageableType::MushroomRed)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Uncommon##Forage")) {
                    for (int pos : ForageableUncommon) {
                        Forageables[pos][1] = Forageables[pos][0] = !Forageables[pos][0];
                    }

                    bEnableCoral = Forageables[static_cast<int>(EForageableType::Coral)][0];
                    bEnablePoisonFlower = Forageables[static_cast<int>(EForageableType::PoisonFlower)][0];
                    bEnablePoisonFlowerP = Forageables[static_cast<int>(EForageableType::PoisonFlower)][1];
                    bEnableWaterFlower = Forageables[static_cast<int>(EForageableType::WaterFlower)][0];
                    bEnableWaterFlowerP = Forageables[static_cast<int>(EForageableType::WaterFlower)][1];
                    bEnableEmeraldCarpet = Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][0];
                    bEnableEmeraldCarpetP = Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][1];
                    bEnableSpicedSprouts = Forageables[static_cast<int>(EForageableType::SpicedSprouts)][0];
                    bEnableSpicedSproutsP = Forageables[static_cast<int>(EForageableType::SpicedSprouts)][1];
                    bEnableSweetLeaves = Forageables[static_cast<int>(EForageableType::SweetLeaves)][0];
                    bEnableSweetLeavesP = Forageables[static_cast<int>(EForageableType::SweetLeaves)][1];
                    bEnableGarlic = Forageables[static_cast<int>(EForageableType::Garlic)][0];
                    bEnableGarlicP = Forageables[static_cast<int>(EForageableType::Garlic)][1];
                    bEnableGinger = Forageables[static_cast<int>(EForageableType::Ginger)][0];
                    bEnableGingerP = Forageables[static_cast<int>(EForageableType::Ginger)][1];
                    bEnableGreenOnion = Forageables[static_cast<int>(EForageableType::GreenOnion)][0];
                    bEnableGreenOnionP = Forageables[static_cast<int>(EForageableType::GreenOnion)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Rare##Forage")) {
                    for (int pos : ForageableRare) {
                        Forageables[pos][1] = Forageables[pos][0] = !Forageables[pos][0];
                    }

                    bEnableDragonsBeard = Forageables[static_cast<int>(EForageableType::DragonsBeard)][0];
                    bEnableDragonsBeardP = Forageables[static_cast<int>(EForageableType::DragonsBeard)][1];
                    bEnableMushroomBlue = Forageables[static_cast<int>(EForageableType::MushroomBlue)][0];
                    bEnableMushroomBlueP = Forageables[static_cast<int>(EForageableType::MushroomBlue)][1];
                    bEnableHeatRoot = Forageables[static_cast<int>(EForageableType::HeatRoot)][0];
                    bEnableHeatRootP = Forageables[static_cast<int>(EForageableType::HeatRoot)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Epic##Forage")) {
                    for (int pos : ForageableEpic) {
                        Forageables[pos][1] = Forageables[pos][0] = !Forageables[pos][0];
                    }

                    bEnableHeartdrop = Forageables[static_cast<int>(EForageableType::Heartdrop)][0];
                    bEnableHeartdropP = Forageables[static_cast<int>(EForageableType::Heartdrop)][1];
                    bEnableDariCloves = Forageables[static_cast<int>(EForageableType::DariCloves)][0];
                    bEnableDariClovesP = Forageables[static_cast<int>(EForageableType::DariCloves)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Star##Forage")) {
                    for (auto& Forageable : Forageables) {
                        Forageable[1] = !Forageable[1];
                    }

                    bEnableSundropP = Forageables[static_cast<int>(EForageableType::Sundrop)][1];
                    bEnableMushroomRedP = Forageables[static_cast<int>(EForageableType::MushroomRed)][1];
                    bEnablePoisonFlowerP = Forageables[static_cast<int>(EForageableType::PoisonFlower)][1];
                    bEnableWaterFlowerP = Forageables[static_cast<int>(EForageableType::WaterFlower)][1];
                    bEnableHeartdropP = Forageables[static_cast<int>(EForageableType::Heartdrop)][1];
                    bEnableSundropP = Forageables[static_cast<int>(EForageableType::Sundrop)][1];
                    bEnableDragonsBeardP = Forageables[static_cast<int>(EForageableType::DragonsBeard)][1];
                    bEnableEmeraldCarpetP = Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][1];
                    bEnableMushroomBlueP = Forageables[static_cast<int>(EForageableType::MushroomBlue)][1];
                    bEnableMushroomRedP = Forageables[static_cast<int>(EForageableType::MushroomRed)][1];
                    bEnableDariClovesP = Forageables[static_cast<int>(EForageableType::DariCloves)][1];
                    bEnableHeatRootP = Forageables[static_cast<int>(EForageableType::HeatRoot)][1];
                    bEnableSpicedSproutsP = Forageables[static_cast<int>(EForageableType::SpicedSprouts)][1];
                    bEnableSweetLeavesP = Forageables[static_cast<int>(EForageableType::SweetLeaves)][1];
                    bEnableGarlicP = Forageables[static_cast<int>(EForageableType::Garlic)][1];
                    bEnableGingerP = Forageables[static_cast<int>(EForageableType::Ginger)][1];
                    bEnableGreenOnionP = Forageables[static_cast<int>(EForageableType::GreenOnion)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }

                ImGui::BeginTable("Forageables", 4);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Normal", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Star", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Beach");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Coral");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Coral", &Forageables[static_cast<int>(EForageableType::Coral)][0])) {
                        bEnableCoral = Forageables[static_cast<int>(EForageableType::Coral)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Coral", &ForageableColors[static_cast<int>(EForageableType::Coral)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Oyster");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Oyster", &Forageables[static_cast<int>(EForageableType::Oyster)][0])) {
                        bEnableOyster = Forageables[static_cast<int>(EForageableType::Oyster)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Oyster", &ForageableColors[static_cast<int>(EForageableType::Oyster)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Shell");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Shell", &Forageables[static_cast<int>(EForageableType::Shell)][0])) {
                        bEnableShell = Forageables[static_cast<int>(EForageableType::Shell)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Shell", &ForageableColors[static_cast<int>(EForageableType::Shell)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Flower");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Briar Daisy");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PoisonFlower", &Forageables[static_cast<int>(EForageableType::PoisonFlower)][0])) {
                        bEnablePoisonFlower = Forageables[static_cast<int>(EForageableType::PoisonFlower)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PoisonFlowerP", &Forageables[static_cast<int>(EForageableType::PoisonFlower)][1])) {
                        bEnablePoisonFlowerP = Forageables[static_cast<int>(EForageableType::PoisonFlower)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##PoisonFlower", &ForageableColors[static_cast<int>(EForageableType::PoisonFlower)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Crystal Lake Lotus");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##WaterFlower", &Forageables[static_cast<int>(EForageableType::WaterFlower)][0])) {
                        bEnableWaterFlower = Forageables[static_cast<int>(EForageableType::WaterFlower)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##WaterFlowerP", &Forageables[static_cast<int>(EForageableType::WaterFlower)][1])) {
                        bEnableWaterFlowerP = Forageables[static_cast<int>(EForageableType::WaterFlower)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##WaterFlower", &ForageableColors[static_cast<int>(EForageableType::WaterFlower)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Heartdrop Lily");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Heartdrop", &Forageables[static_cast<int>(EForageableType::Heartdrop)][0])) {
                        bEnableHeartdrop = Forageables[static_cast<int>(EForageableType::Heartdrop)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeartdropP", &Forageables[static_cast<int>(EForageableType::Heartdrop)][1])) {
                        bEnableHeartdropP = Forageables[static_cast<int>(EForageableType::Heartdrop)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Heartdrop", &ForageableColors[static_cast<int>(EForageableType::Heartdrop)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sundrop Lily");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Sundrop", &Forageables[static_cast<int>(EForageableType::Sundrop)][0])) {
                        bEnableSundrop = Forageables[static_cast<int>(EForageableType::Sundrop)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SundropP", &Forageables[static_cast<int>(EForageableType::Sundrop)][1])) {
                        bEnableSundropP = Forageables[static_cast<int>(EForageableType::Sundrop)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Sundrop", &ForageableColors[static_cast<int>(EForageableType::Sundrop)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Moss");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Dragon's Beard Peat");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonsBeard", &Forageables[static_cast<int>(EForageableType::DragonsBeard)][0])) {
                        bEnableDragonsBeard = Forageables[static_cast<int>(EForageableType::DragonsBeard)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonsBeardP", &Forageables[static_cast<int>(EForageableType::DragonsBeard)][1])) {
                        bEnableDragonsBeardP = Forageables[static_cast<int>(EForageableType::DragonsBeard)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DragonsBeard", &ForageableColors[static_cast<int>(EForageableType::DragonsBeard)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Emerald Carpet Moss");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##EmeraldCarpet", &Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][0])) {
                        bEnableEmeraldCarpet = Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##EmeraldCarpetP", &Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][1])) {
                        bEnableEmeraldCarpetP = Forageables[static_cast<int>(EForageableType::EmeraldCarpet)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##EmeraldCarpet", &ForageableColors[static_cast<int>(EForageableType::EmeraldCarpet)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Mushroom");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Brightshroom");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MushroomBlue", &Forageables[static_cast<int>(EForageableType::MushroomBlue)][0])) {
                        bEnableMushroomBlue = Forageables[static_cast<int>(EForageableType::MushroomBlue)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MushroomBlueP", &Forageables[static_cast<int>(EForageableType::MushroomBlue)][1])) {
                        bEnableMushroomBlueP = Forageables[static_cast<int>(EForageableType::MushroomBlue)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MushroomBlue", &ForageableColors[static_cast<int>(EForageableType::MushroomBlue)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Mountain Morel");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MushroomRed", &Forageables[static_cast<int>(EForageableType::MushroomRed)][0])) {
                        bEnableMushroomRed = Forageables[static_cast<int>(EForageableType::MushroomRed)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MushroomRedP", &Forageables[static_cast<int>(EForageableType::MushroomRed)][1])) {
                        bEnableMushroomRedP = Forageables[static_cast<int>(EForageableType::MushroomRed)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MushroomRed", &ForageableColors[static_cast<int>(EForageableType::MushroomRed)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Spice");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Dari Cloves");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DariCloves", &Forageables[static_cast<int>(EForageableType::DariCloves)][0])) {
                        bEnableDariCloves = Forageables[static_cast<int>(EForageableType::DariCloves)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DariClovesP", &Forageables[static_cast<int>(EForageableType::DariCloves)][1])) {
                        bEnableDariClovesP = Forageables[static_cast<int>(EForageableType::DariCloves)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DariCloves", &ForageableColors[static_cast<int>(EForageableType::DariCloves)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Heat Root");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeatRoot", &Forageables[static_cast<int>(EForageableType::HeatRoot)][0])) {
                        bEnableHeatRoot = Forageables[static_cast<int>(EForageableType::HeatRoot)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeatRootP", &Forageables[static_cast<int>(EForageableType::HeatRoot)][1])) {
                        bEnableHeatRootP = Forageables[static_cast<int>(EForageableType::HeatRoot)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##HeatRoot", &ForageableColors[static_cast<int>(EForageableType::HeatRoot)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Spice Sprouts");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SpicedSprouts", &Forageables[static_cast<int>(EForageableType::SpicedSprouts)][0])) {
                        bEnableSpicedSprouts = Forageables[static_cast<int>(EForageableType::SpicedSprouts)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SpicedSproutsP", &Forageables[static_cast<int>(EForageableType::SpicedSprouts)][1])) {
                        bEnableSpicedSproutsP = Forageables[static_cast<int>(EForageableType::SpicedSprouts)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##SpicedSprouts", &ForageableColors[static_cast<int>(EForageableType::SpicedSprouts)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sweet Leaf");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SweetLeaves", &Forageables[static_cast<int>(EForageableType::SweetLeaves)][0])) {
                        bEnableSweetLeaves = Forageables[static_cast<int>(EForageableType::SweetLeaves)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SweetLeavesP", &Forageables[static_cast<int>(EForageableType::SweetLeaves)][1])) {
                        bEnableSweetLeavesP = Forageables[static_cast<int>(EForageableType::SweetLeaves)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##SweetLeaves", &ForageableColors[static_cast<int>(EForageableType::SweetLeaves)]);

                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Vegetable");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Wild Garlic");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Garlic", &Forageables[static_cast<int>(EForageableType::Garlic)][0])) {
                        bEnableGarlic = Forageables[static_cast<int>(EForageableType::Garlic)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GarlicP", &Forageables[static_cast<int>(EForageableType::Garlic)][1])) {
                        bEnableGarlicP = Forageables[static_cast<int>(EForageableType::Garlic)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Garlic", &ForageableColors[static_cast<int>(EForageableType::Garlic)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Wild Ginger");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Ginger", &Forageables[static_cast<int>(EForageableType::Ginger)][0])) {
                        bEnableGinger = Forageables[static_cast<int>(EForageableType::Ginger)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GingerP", &Forageables[static_cast<int>(EForageableType::Ginger)][1])) {
                        bEnableGingerP = Forageables[static_cast<int>(EForageableType::Ginger)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Ginger", &ForageableColors[static_cast<int>(EForageableType::Ginger)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Wild Green Onion");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GreenOnion", &Forageables[static_cast<int>(EForageableType::GreenOnion)][0])) {
                        bEnableGreenOnion = Forageables[static_cast<int>(EForageableType::GreenOnion)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GreenOnionP", &Forageables[static_cast<int>(EForageableType::GreenOnion)][1])) {
                        bEnableGreenOnionP = Forageables[static_cast<int>(EForageableType::GreenOnion)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##GreenOnion", &ForageableColors[static_cast<int>(EForageableType::GreenOnion)]);
                }
                ImGui::EndTable();
            }

            ImGui::NextColumn();

            if (ImGui::CollapsingHeader("Bugs##BugsSettingsHeader")) {
                ImGui::Text("Enable all:");
                ImGui::SameLine();
                if (ImGui::Button("Common##Bugs")) {
                    for (auto& Bug : Bugs) {
                        Bug[static_cast<int>(EBugQuality::Common)][1] = Bug[static_cast<int>(EBugQuality::Common)][0] = !Bug[static_cast<int>(EBugQuality::Common)][0];
                    }

                    bEnableBeetleC = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableBeetleCP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableButterflyC = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableButterflyCP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCicadaC = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableCicadaCP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCrabC = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableCrabCP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCricketC = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableCricketCP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableDragonflyC = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableDragonflyCP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableGlowbugC = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableGlowbugCP = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableLadybugC = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableLadybugCP = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableMothC = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][0];
                    bEnableMothCP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Uncommon##Bugs")) {
                    for (auto& Bug : Bugs) {
                        Bug[static_cast<int>(EBugQuality::Uncommon)][1] = Bug[static_cast<int>(EBugQuality::Uncommon)][0] = !Bug[static_cast<int>(EBugQuality::Uncommon)][0];
                    }

                    bEnableBeeU = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableBeeUP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableBeetleU = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableBeetleUP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableButterflyU = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableButterflyUP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCicadaU = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableCicadaUP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCrabU = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableCrabUP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCricketU = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableCricketUP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableDragonflyU = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableDragonflyUP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableGlowbugU = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableGlowbugUP = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableLadybugU = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableLadybugUP = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableMantisU = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableMantisUP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableMothU = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableMothUP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnablePedeU = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnablePedeUP = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableSnailU = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][0];
                    bEnableSnailUP = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Rare##Bugs")) {
                    for (auto& Bug : Bugs) {
                        Bug[static_cast<int>(EBugQuality::Rare)][1] = Bug[static_cast<int>(EBugQuality::Rare)][0] = !Bug[static_cast<int>(EBugQuality::Rare)][0];
                        Bug[static_cast<int>(EBugQuality::Rare2)][1] = Bug[static_cast<int>(EBugQuality::Rare2)][0] = !Bug[static_cast<int>(EBugQuality::Rare2)][0];
                    }
                    
                    bEnableBeeR = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableBeeRP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableBeetleR = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableBeetleRP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableButterflyR = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableButterflyRP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableCicadaR = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableCicadaRP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableCrabR = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableCrabRP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableCricketR = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableCricketRP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableDragonflyR = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableDragonflyRP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableMantisR = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableMantisRP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableMantisR2 = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][0];
                    bEnableMantisR2P = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][1];
                    bEnableMothR = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableMothRP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnablePedeR = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnablePedeRP = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnablePedeR2 = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][0];
                    bEnablePedeR2P = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][1];
                    bEnableSnailR = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][0];
                    bEnableSnailRP = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Epic##Bugs")) {
                    for (auto& Bug : Bugs) {
                        Bug[static_cast<int>(EBugQuality::Epic)][1] = Bug[static_cast<int>(EBugQuality::Epic)][0] = !Bug[static_cast<int>(EBugQuality::Epic)][0];
                    }

                    bEnableBeetleE = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][0];
                    bEnableBeetleEP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableButterflyE = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][0];
                    bEnableButterflyEP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableDragonflyE = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][0];
                    bEnableDragonflyEP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableMantisE = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][0];
                    bEnableMantisEP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }
                ImGui::SameLine();
                if (ImGui::Button("Star##Bugs")) {
                    for (auto& Bug : Bugs) {
                        for (auto& j : Bug) {
                            j[1] = !j[1];
                        }
                    }

                    bEnableBeeUP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableBeeRP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableBeetleCP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableBeetleUP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableBeetleRP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableBeetleEP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableButterflyCP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableButterflyUP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableButterflyRP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableButterflyEP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableCicadaCP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCicadaUP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCicadaRP = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableCrabCP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCrabUP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCrabRP = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableCricketCP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableCricketUP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableCricketRP = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableDragonflyCP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableDragonflyUP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableDragonflyRP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableDragonflyEP = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableGlowbugCP = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableGlowbugUP = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableLadybugCP = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableLadybugUP = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableMantisUP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableMantisRP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnableMantisR2P = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][1];
                    bEnableMantisEP = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][1];
                    bEnableMothCP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][1];
                    bEnableMothUP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableMothRP = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnablePedeUP = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnablePedeRP = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][1];
                    bEnablePedeR2P = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][1];
                    bEnableSnailUP = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][1];
                    bEnableSnailRP = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][1];

                    SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                }

                ImGui::BeginTable("Bugs", 4);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Normal", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Star", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Bee");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Bahari Bee");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeeU", &Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableBeeU = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeeUP", &Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableBeeUP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BeeU", &BugColors[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Golden Glory Bee");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeeR", &Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableBeeR = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeeRP", &Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableBeeRP = Bugs[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)][1];;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Bee", &BugColors[static_cast<int>(EBugKind::Bee)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Beetle");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Spotted Stink Bug");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleC", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableBeetleC = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleCP", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableBeetleCP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BeetleC", &BugColors[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Proudhorned Stag Beetle");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleU", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableBeetleU = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleUP", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableBeetleUP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BeetleU", &BugColors[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Raspberry Beetle");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleR", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableBeetleR = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleRP", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableBeetleRP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BeetleR", &BugColors[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Ancient Amber Beetle");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleE", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][0])) {
                        bEnableBeetleE = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BeetleEP", &Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][1])) {
                        bEnableBeetleEP = Bugs[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##BeetleE", &BugColors[static_cast<int>(EBugKind::Beetle)][static_cast<int>(EBugQuality::Epic)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Butterfly");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Common Blue Butterfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyC", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableButterflyC = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyCP", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableButterflyCP = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ButterflyC", &BugColors[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Duskwing Butterfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyU", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableButterflyU  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyUP", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableButterflyUP  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ButterflyU", &BugColors[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Brighteye Butterfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyR", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableButterflyR  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyRP", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableButterflyRP  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ButterflyR", &BugColors[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Rainbow-Tipped Butterfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyE", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][0])) {
                        bEnableButterflyE  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##ButterflyEP", &Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][1])) {
                        bEnableButterflyEP  = Bugs[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##ButterflyE", &BugColors[static_cast<int>(EBugKind::Butterfly)][static_cast<int>(EBugQuality::Epic)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Cicada");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Common Bark Cicada");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaC", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableCicadaC  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaCP", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableCicadaCP  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CicadaC", &BugColors[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Cerulean Cicada");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaU", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableCicadaU  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaUP", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableCicadaUP  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CicadaU", &BugColors[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Spitfire Cicada");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaR", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableCicadaR  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CicadaRP", &Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableCicadaRP  = Bugs[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CicadaR", &BugColors[static_cast<int>(EBugKind::Cicada)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Crab");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Bahari Crab");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabC", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableCrabC  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabCP", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableCrabCP  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CrabC", &BugColors[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Spineshell Crab");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabU", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableCrabU  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabUP", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableCrabUP  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CrabU", &BugColors[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Vampire Crab");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabR", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableCrabR  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CrabRP", &Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableCrabRP  = Bugs[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CrabR", &BugColors[static_cast<int>(EBugKind::Crab)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Cricket");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Common Field Cricket");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketC", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableCricketC  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketCP", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableCricketCP  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CricketC", &BugColors[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Garden Leafhopper");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketU", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableCricketU  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketUP", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableCricketUP  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CricketU", &BugColors[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Azure Stonehopper");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketR", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableCricketR  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##CricketRP", &Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableCricketRP  = Bugs[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##CricketR", &BugColors[static_cast<int>(EBugKind::Cricket)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Dragonfly");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Brushtail Dragonfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyC", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableDragonflyC  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyCP", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableDragonflyCP  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DragonflyC", &BugColors[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Inky Dragonfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyU", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableDragonflyU  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyUP", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableDragonflyUP  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DragonflyU", &BugColors[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Firebreathing Dragonfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyR", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableDragonflyR  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyRP", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableDragonflyRP  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DragonflyR", &BugColors[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Jewelwing Dragonfly");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyE", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][0])) {
                        bEnableDragonflyE  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##DragonflyEP", &Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][1])) {
                        bEnableDragonflyEP  = Bugs[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##DragonflyE", &BugColors[static_cast<int>(EBugKind::Dragonfly)][static_cast<int>(EBugQuality::Epic)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Glowbug");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Paper Lantern Bug");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GlowbugC", &Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableGlowbugC  = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GlowbugCP", &Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableGlowbugCP  = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##GlowbugC", &BugColors[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Bahari Glowbug");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GlowbugU", &Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableGlowbugU  = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##GlowbugUP", &Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableGlowbugUP  = Bugs[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##GlowbugU", &BugColors[static_cast<int>(EBugKind::Glowbug)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Ladybug");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Garden Ladybug");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##LadybugC", &Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableLadybugC  = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##LadybugCP", &Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableLadybugCP  = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##LadybugC", &BugColors[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Princess Ladybug");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##LadybugU", &Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableLadybugU  = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##LadybugUP", &Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableLadybugUP  = Bugs[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##LadybugU", &BugColors[static_cast<int>(EBugKind::Ladybug)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Mantis");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Garden Mantis");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisU", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableMantisU  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisUP", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableMantisUP  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MantisU", &BugColors[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Spotted Mantis");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisR", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableMantisR  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisRP", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableMantisRP  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MantisR", &BugColors[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Leafstalker Mantis");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisR2", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][0])) {
                        bEnableMantisR2  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisR2P", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][1])) {
                        bEnableMantisR2P  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MantisR2", &BugColors[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Rare2)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Fairy Mantis");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisE", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][0])) {
                        bEnableMantisE  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MantisEP", &Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][1])) {
                        bEnableMantisEP  = Bugs[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MantisE", &BugColors[static_cast<int>(EBugKind::Mantis)][static_cast<int>(EBugQuality::Epic)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Moth");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Kilima Night Moth");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothC", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][0])) {
                        bEnableMothC  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothCP", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][1])) {
                        bEnableMothCP  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MothC", &BugColors[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Common)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Lunar Fairy Moth");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothU", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableMothU  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothUP", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableMothUP  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MothU", &BugColors[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Gossamer Veil Moth");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothR", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableMothR  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##MothRP", &Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableMothRP  = Bugs[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)][1];;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##MothR", &BugColors[static_cast<int>(EBugKind::Moth)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Pede");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Garden Millipede");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeU", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnablePedeU  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeUP", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnablePedeUP  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##PedeU", &BugColors[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Hairy Millipede");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeR", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnablePedeR  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeRP", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnablePedeRP  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##PedeR", &BugColors[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Scintillating Centipede");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeR2", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][0])) {
                        bEnablePedeR2  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##PedeR2P", &Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][1])) {
                        bEnablePedeR2P  = Bugs[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##PedeR2", &BugColors[static_cast<int>(EBugKind::Pede)][static_cast<int>(EBugQuality::Rare2)]);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::Text("Snail");
                    ImGui::TableNextColumn();
                    ImGui::Text("Normal");
                    ImGui::TableNextColumn();
                    ImGui::Text("Star");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Garden Snail");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SnailU", &Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][0])) {
                        bEnableSnailU  = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SnailUP", &Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][1])) {
                        bEnableSnailUP  = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##SnailU", &BugColors[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Uncommon)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Stripeshell Snail");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SnailR", &Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][0])) {
                        bEnableSnailR  = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][0];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SnailRP", &Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][1])) {
                        bEnableSnailRP = Bugs[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)][1];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##SnailR", &BugColors[static_cast<int>(EBugKind::Snail)][static_cast<int>(EBugQuality::Rare)]);
                }
                ImGui::EndTable();
            }
            if (ImGui::CollapsingHeader("Trees##TreesSettingHeader")) {
                ImGui::BeginTable("Trees", 5);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Sm", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Med", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Lg", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sm");
                    ImGui::TableNextColumn();
                    ImGui::Text("Med");
                    ImGui::TableNextColumn();
                    ImGui::Text("Lg");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Bush");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##BushSm", &Trees[static_cast<int>(ETreeType::Bush)][static_cast<int>(EGatherableSize::Bush)])) {
                        bEnableBushSm  = Trees[static_cast<int>(ETreeType::Bush)][static_cast<int>(EGatherableSize::Bush)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Bush", &TreeColors[static_cast<int>(ETreeType::Bush)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Sapwood");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SapwoodSm", &Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableSapwoodSm  = Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SapwoodMed", &Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableSapwoodMed  = Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##SapwoodLg", &Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableSapwoodLg  = Trees[static_cast<int>(ETreeType::Sapwood)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Sapwood", &TreeColors[static_cast<int>(ETreeType::Sapwood)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Heartwood");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeartwoodSm", &Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableHeartwoodSm  = Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeartwoodMed", &Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableHeartwoodMed  = Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##HeartwoodLg", &Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableHeartwoodLg  = Trees[static_cast<int>(ETreeType::Heartwood)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Heartwood", &TreeColors[static_cast<int>(ETreeType::Heartwood)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Flow-Infused");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##FlowSm", &Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Small)])) {
                        bEnableFlowSm  = Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Small)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##FlowMed", &Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Medium)])) {
                        bEnableFlowMed  = Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Medium)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##FlowLg", &Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Large)])) {
                        bEnableFlowLg  = Trees[static_cast<int>(ETreeType::Flow)][static_cast<int>(EGatherableSize::Large)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Flow", &TreeColors[static_cast<int>(ETreeType::Flow)]);
                }
                ImGui::EndTable();
            }
            if (ImGui::CollapsingHeader("Player & Entities##PlayerEntitiesSettingHeader")) {
                ImGui::BeginTable("Odds", 3);
                {
                    ImGui::TableSetupColumn("Name");
                    ImGui::TableSetupColumn("Show", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableSetupColumn("Color", ImGuiTableColumnFlags_WidthFixed, 40);
                    ImGui::TableNextRow(ImGuiTableRowFlags_Headers);
                    ImGui::TableNextColumn();
                    ImGui::TableNextColumn();
                    ImGui::Text("Show");
                    ImGui::TableNextColumn();
                    ImGui::Text("Color");
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Players");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Players", &Singles[static_cast<int>(EOneOffs::Player)])) {
                        bEnablePlayers = Singles[static_cast<int>(EOneOffs::Player)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Players", &SingleColors[static_cast<int>(EOneOffs::Player)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("NPCs");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##NPC", &Singles[static_cast<int>(EOneOffs::NPC)])) {
                        bEnableNPC = Singles[static_cast<int>(EOneOffs::NPC)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##NPC", &SingleColors[static_cast<int>(EOneOffs::NPC)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Fish");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Fish", &Fish[static_cast<int>(EFishType::Hook)])) {
                        bEnableFish = Fish[static_cast<int>(EFishType::Hook)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Fish", &FishColors[static_cast<int>(EFishType::Hook)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Fish Pools");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Pools", &Fish[static_cast<int>(EFishType::Node)])) {
                        bEnablePools = Fish[static_cast<int>(EFishType::Node)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Pools", &FishColors[static_cast<int>(EFishType::Node)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Loot");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Loot", &Singles[static_cast<int>(EOneOffs::Loot)])) {
                        bEnableLoot = Singles[static_cast<int>(EOneOffs::Loot)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Loot", &SingleColors[static_cast<int>(EOneOffs::Loot)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Quests");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Quest", &Singles[static_cast<int>(EOneOffs::Quest)])) {
                        bEnableQuest = Singles[static_cast<int>(EOneOffs::Quest)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Quest", &SingleColors[static_cast<int>(EOneOffs::Quest)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Rummage Piles");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##RummagePiles", &Singles[static_cast<int>(EOneOffs::RummagePiles)])) {
                        bEnableRummagePiles = Singles[static_cast<int>(EOneOffs::RummagePiles)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##RummagePiles", &SingleColors[static_cast<int>(EOneOffs::RummagePiles)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Stables");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Stables", &Singles[static_cast<int>(EOneOffs::Stables)])) {
                        bEnableStables = Singles[static_cast<int>(EOneOffs::Stables)];
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Stables", &SingleColors[static_cast<int>(EOneOffs::Stables)]);
                    ImGui::TableNextRow();
                    ImGui::TableNextColumn();
                    ImGui::Text("Others");
                    ImGui::TableNextColumn();
                    if (ImGui::Checkbox("##Others", &bVisualizeDefault)) {
                        bEnableOthers = bVisualizeDefault;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::TableNextColumn();
                    ImGui::ColorPicker("##Others", &SingleColors[static_cast<int>(EOneOffs::Others)]);
                }
                ImGui::EndTable();
            }
        }
        // ==================================== 1 Aimbots & Fun TAB
        else if (OpenTab == 1) {
            ImGui::Columns(2, nullptr, false);

            AValeriaCharacter* ValeriaCharacter = GetValeriaData();

            // InteliTarget Controls
            if (ImGui::CollapsingHeader("InteliTarget Settings - General##InteliTargetSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    if (ImGui::Checkbox("Enable Silent Aimbot", &bEnableSilentAimbot)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Enable Legacy Aimbot", &bEnableAimbot)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (bEnableAimbot) {
                        ImGui::Text("Aim Smoothing:");
                        ImGui::SliderFloat("Smoothing Factor", &SmoothingFactor, 1.0f, 100.0f, "%1.0f");
                        ImGui::Text("Aim Offset Adjustment (Drag Point):");
                        const auto canvas_size = ImVec2(200, 200); // Canvas size
                        static auto cursor_pos = ImVec2(0, 0); // Start at the center (0, 0 relative to center)
                        constexpr float scaling_factor = 0.5f; // Reduced scaling factor for finer control

                        ImU32 gridColor = IM_COL32(50, 45, 139, 255); // Grid lines color
                        ImU32 gridBackgroundColor = IM_COL32(26, 28, 33, 255); // Background color
                        ImU32 cursorColor = IM_COL32(69, 39, 160, 255); // Cursor color

                        if (ImGui::BeginChild("GridArea", ImVec2(200, 200), false, ImGuiWindowFlags_NoScrollbar)) {
                            ImDrawList* draw_list = ImGui::GetWindowDrawList();
                            ImVec2 canvas_p0 = ImGui::GetCursorScreenPos(); // Top-left corner of the canvas
                            auto grid_center = ImVec2(canvas_p0.x + canvas_size.x * 0.5f, canvas_p0.y + canvas_size.y * 0.5f);

                            draw_list->AddRectFilled(canvas_p0, ImVec2(canvas_p0.x + canvas_size.x, canvas_p0.y + canvas_size.y), gridBackgroundColor);
                            draw_list->AddLine(ImVec2(grid_center.x, canvas_p0.y), ImVec2(grid_center.x, canvas_p0.y + canvas_size.y), gridColor);
                            draw_list->AddLine(ImVec2(canvas_p0.x, grid_center.y), ImVec2(canvas_p0.x + canvas_size.x, grid_center.y), gridColor);

                            ImGui::SetCursorScreenPos(ImVec2(grid_center.x + cursor_pos.x - 5, grid_center.y + cursor_pos.y - 5));
                            ImGui::InvisibleButton("cursor", ImVec2(10, 10));
                            if (ImGui::IsItemActive() && ImGui::IsMouseDragging(0)) {
                                cursor_pos.x = ImClamp(cursor_pos.x - ImGui::GetIO().MouseDelta.x * scaling_factor, -canvas_size.x * 0.5f, canvas_size.x * 0.5f);
                                cursor_pos.y = ImClamp(cursor_pos.y - ImGui::GetIO().MouseDelta.y * scaling_factor, -canvas_size.y * 0.5f, canvas_size.y * 0.5f);
                            }

                            draw_list->AddCircleFilled(ImVec2(grid_center.x + cursor_pos.x, grid_center.y + cursor_pos.y), 5, cursorColor, 12);

                            // Sliders for fine-tuned control
                            ImGui::SetCursorPosY(canvas_p0.y + canvas_size.y + 5);
                            ImGui::SliderFloat2("Horizontal & Vertical", reinterpret_cast<float*>(&cursor_pos), -canvas_size.x * 0.5f, canvas_size.x * 0.5f, "H: %.1f, V: %.1f");
                        }
                        ImGui::EndChild();

                        // Convert cursor_pos to AimOffset affecting Pitch and Yaw
                        AimOffset = {cursor_pos.x * scaling_factor, cursor_pos.y * scaling_factor, 0.0f};
                        ImGui::Text("Current Offset: Pitch: %.2f, Yaw: %.2f", AimOffset.X, AimOffset.Y);
                    }
                    if (ImGui::Checkbox("Teleport to Targeted", &bTeleportToTargeted)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    ImGui::Text("[ hotkey: X1 Mouse Button (Back) ]");

                    if (ImGui::Checkbox("Avoid Teleporting To Targeted Players", &bAvoidTeleportingToPlayers)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                        ImGui::SetTooltip("Don't teleport to players.");

                    ImGui::Checkbox("Avoid Teleporting To Targeted When Players Are Near", &bDoRadiusPlayersAvoidance);
                    if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                        ImGui::SetTooltip("Don't teleport if a player is detected near your destination.");
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }

            ImGui::NextColumn();

            // Fun Mods - Entities column
            if (ImGui::CollapsingHeader("Fun Mods - General##FunModsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    static bool teleportLootDisabled = true;
                    ImGui::PushItemFlag(ImGuiItemFlags_Disabled, teleportLootDisabled);
                    if (ImGui::Checkbox("[Disabled] Teleport Dropped Loot to Player", &bEnableLootbagTeleportation)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::PopItemFlag();
                    //if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled)) ImGui::SetTooltip("Automatically teleport dropped loot to your current location.");

                    if (ImGui::Checkbox("Anti AFK", &bEnableAntiAfk)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Teleport To Map Waypoint", &bEnableWaypointTeleport)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    if (ImGui::IsItemHovered(ImGuiHoveredFlags_AllowWhenDisabled))
                        ImGui::SetTooltip("Automatically teleports you at your world map's waypoint.");
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }
        }
        // ==================================== 2 Movement & Teleport TAB
        else if (OpenTab == 2) {
            // Setting the columns layout
            ImGui::Columns(2, nullptr, false);

            //ULocalPlayer* LocalPlayer = nullptr;
            //APlayerController* PlayerController = nullptr;
            AValeriaCharacter* ValeriaCharacter = nullptr;

            UWorld* World = GetWorld();
            if (World) {
                if (UGameInstance* GameInstance = World->OwningGameInstance; GameInstance && GameInstance->LocalPlayers.Num() > 0) {
                    if (ULocalPlayer* LocalPlayer = GameInstance->LocalPlayers[0]) {
                        if (APlayerController* PlayerController = LocalPlayer->PlayerController) {
                            if (PlayerController && PlayerController->Pawn) {
                                ValeriaCharacter = static_cast<AValeriaPlayerController*>(PlayerController)->GetValeriaCharacter();
                            }
                        }
                    }
                }
            }

            UValeriaCharacterMoveComponent* MovementComponent = nullptr;
            if (ValeriaCharacter) {
                MovementComponent = ValeriaCharacter->GetValeriaCharacterMovementComponent();
            }

            // Movement settings column
            if (ImGui::CollapsingHeader("Movement Settings - General##MovementGeneralSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (MovementComponent) {
                    ImGui::Text("Map: %s", CurrentMap.c_str());
                    ImGui::Spacing();
                    static const char* movementModes[] = {"Walking", "Flying", "Fly No Collision"};
                    // Dropdown menu options

                    ImGui::Checkbox("Enable Noclip", &bEnableNoclip);

                    // Create a combo box for selecting the movement mode
                    ImGui::Text("Movement Mode");
                    ImGui::SetNextItemWidth(200.0f); // Adjust the width as needed
                    if (ImGui::BeginCombo("##MovementMode", movementModes[currentMovementModeIndex])) {
                        for (int n = 0; n < IM_ARRAYSIZE(movementModes); n++) {
                            const bool isSelected = (currentMovementModeIndex == n);
                            if (ImGui::Selectable(movementModes[n], isSelected)) {
                                currentMovementModeIndex = n;
                            }
                            // Set the initial focus when opening the combo
                            if (isSelected) {
                                ImGui::SetItemDefaultFocus();
                            }
                        }
                        ImGui::EndCombo();
                    }
                    ImGui::SameLine();
                    // Button to apply the selected movement mode
                    if (ImGui::Button("Set")) {
                        switch (currentMovementModeIndex) {
                        case 0: // Walking
                            MovementComponent->SetMovementMode(EMovementMode::MOVE_Walking, 1);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToAllChannels(ECollisionResponse::ECR_Block);
                            break;
                        case 1: // Swimming
                            MovementComponent->SetMovementMode(EMovementMode::MOVE_Flying, 4);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToAllChannels(ECollisionResponse::ECR_Block);
                            break;
                        case 2: // Noclip
                            MovementComponent->SetMovementMode(EMovementMode::MOVE_Flying, 5);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToAllChannels(ECollisionResponse::ECR_Ignore);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToChannel(ECollisionChannel::ECC_WorldStatic, ECollisionResponse::ECR_Ignore);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToChannel(ECollisionChannel::ECC_WorldDynamic, ECollisionResponse::ECR_Ignore);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToChannel(ECollisionChannel::ECC_Pawn, ECollisionResponse::ECR_Ignore);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToChannel(ECollisionChannel::ECC_PhysicsBody, ECollisionResponse::ECR_Ignore);
                            ValeriaCharacter->CapsuleComponent->SetCollisionResponseToChannel(ECollisionChannel::ECC_Destructible, ECollisionResponse::ECR_Ignore);
                            break;
                        default:
                            break;
                        }
                    }

                    constexpr float f1000 = 1000.0f, f5 = 5.f, f1 = 1.f;

                    // Global Game Speed with slider
                    ImGui::Text("Global Game Speed: ");
                    if (ImGui::InputScalar("##GlobalGameSpeed", ImGuiDataType_Float, &CustomGameSpeed, &f1, &f1000, "%.2f", ImGuiInputTextFlags_None)) {
                        static_cast<UGameplayStatics*>(UGameplayStatics::StaticClass()->DefaultObject)->SetGlobalTimeDilation(World, CustomGameSpeed);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##GlobalGameSpeed")) {
                        CustomGameSpeed = GameSpeed;
                        static_cast<UGameplayStatics*>(UGameplayStatics::StaticClass()->DefaultObject)->SetGlobalTimeDilation(World, GameSpeed);
                    }

                    // Walk Speed
                    ImGui::Text("Walk Speed: ");
                    if (ImGui::InputScalar("##WalkSpeed", ImGuiDataType_Float, &CustomWalkSpeed, &f5)) {
                        MovementComponent->MaxWalkSpeed = CustomWalkSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##WalkSpeed")) {
                        CustomWalkSpeed = WalkSpeed;
                        MovementComponent->MaxWalkSpeed = WalkSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Sprint Speed
                    ImGui::Text("Sprint Speed: ");
                    if (ImGui::InputScalar("##SprintSpeedMultiplier", ImGuiDataType_Float, &CustomSprintSpeedMultiplier, &f5)) {
                        MovementComponent->SprintSpeedMultiplier = CustomSprintSpeedMultiplier;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##SprintSpeedMultiplier")) {
                        CustomSprintSpeedMultiplier = SprintSpeedMultiplier;
                        MovementComponent->SprintSpeedMultiplier = SprintSpeedMultiplier;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Climbing Speed
                    ImGui::Text("Climbing Speed: ");
                    if (ImGui::InputScalar("##ClimbingSpeed", ImGuiDataType_Float, &CustomClimbingSpeed, &f5)) {
                        MovementComponent->ClimbingSpeed = CustomClimbingSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##ClimbingSpeed")) {
                        CustomClimbingSpeed = ClimbingSpeed;
                        MovementComponent->ClimbingSpeed = ClimbingSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Gliding Speed
                    ImGui::Text("Gliding Speed: ");
                    if (ImGui::InputScalar("##GlidingSpeed", ImGuiDataType_Float, &CustomGlidingSpeed, &f5)) {
                        MovementComponent->GlidingMaxSpeed = CustomGlidingSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##GlidingSpeed")) {
                        CustomGlidingSpeed = GlidingSpeed;
                        MovementComponent->GlidingMaxSpeed = GlidingSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Gliding Fall Speed
                    ImGui::Text("Gliding Fall Speed: ");
                    if (ImGui::InputScalar("##GlidingFallSpeed", ImGuiDataType_Float, &CustomGlidingFallSpeed, &f5)) {
                        MovementComponent->GlidingFallSpeed = CustomGlidingFallSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##GlidingFallSpeed")) {
                        CustomGlidingFallSpeed = GlidingFallSpeed;
                        MovementComponent->GlidingFallSpeed = GlidingFallSpeed;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Jump Velocity
                    ImGui::Text("Jump Velocity: ");
                    if (ImGui::InputScalar("##JumpVelocity", ImGuiDataType_Float, &CustomJumpVelocity, &f5)) {
                        MovementComponent->JumpZVelocity = CustomJumpVelocity;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##JumpVelocity")) {
                        CustomJumpVelocity = JumpVelocity;
                        MovementComponent->JumpZVelocity = JumpVelocity;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    // Step Height
                    ImGui::Text("Step Height: ");
                    if (ImGui::InputScalar("##MaxStepHeight", ImGuiDataType_Float, &CustomMaxStepHeight, &f5)) {
                        MovementComponent->MaxStepHeight = CustomMaxStepHeight;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("R##MaxStepHeight")) {
                        CustomMaxStepHeight = MaxStepHeight;
                        MovementComponent->MaxStepHeight = MaxStepHeight;
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }
                } else {
                    if (!ValeriaCharacter) {
                        ImGui::Text("Waiting for character initialization...");
                    }
                    else {
                        ImGui::Text("Movement component not available.");
                    }
                }
            }

            ImGui::NextColumn();

            if (ImGui::CollapsingHeader("Locations & Coordinates - General##LocationSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    // Locations and exploits column
                    ImGui::Text("Teleport List");
                    ImGui::Text("Double-click a location listing to teleport");
                    ImGui::ListBoxHeader("##TeleportList", ImVec2(-1, 150));
                    for (auto& [MapName, Type, Name, Location, Rotate] : TeleportLocations) {
                        if (CurrentMap == MapName || MapName == "UserDefined") {
                            if (ImGui::Selectable(Name.c_str(), false, ImGuiSelectableFlags_AllowDoubleClick)) {
                                if (ImGui::IsMouseDoubleClicked(0)) {
                                    if (Type == ELocation::Global_Home) {
                                        ValeriaCharacter->GetTeleportComponent()->RpcServerTeleport_Home();
                                    } else {
                                        FHitResult HitResult;
                                        ValeriaCharacter->K2_SetActorLocation(Location, false, &HitResult, true);
                                        // NOTE: Disabled for now. (testing)
                                        //PaliaContext.PlayerController->ClientForceGarbageCollection();
                                        //PaliaContext.PlayerController->ClientFlushLevelStreaming();
                                    }
                                }
                            }
                        }
                    }
                    ImGui::ListBoxFooter();

                    auto [PlayerX, PlayerY, PlayerZ] = ValeriaCharacter->K2_GetActorLocation();
                    auto PlayerYaw = ValeriaCharacter->K2_GetActorRotation().Yaw;
                    ImGui::Text("Current Coords: %.3f, %.3f, %.3f, %.3f", PlayerX, PlayerY, PlayerZ, PlayerYaw);
                    ImGui::Spacing();

                    // Set the width for the labels and inputs
                    constexpr float labelWidth = 50.0f;
                    constexpr float inputWidth = 200.0f;

                    // 
                    static FVector TeleportLocation;
                    static FRotator TeleportRotate;

                    constexpr double d5 = 5., d1 = 1.;

                    // X Coordinate
                    ImGui::AlignTextToFramePadding();
                    ImGui::Text("X: ");
                    ImGui::SameLine(labelWidth);
                    ImGui::SetNextItemWidth(inputWidth);
                    ImGui::InputScalar("##TeleportLocationX", ImGuiDataType_Double, &TeleportLocation.X, &d5);

                    // Y Coordinate
                    ImGui::AlignTextToFramePadding();
                    ImGui::Text("Y: ");
                    ImGui::SameLine(labelWidth);
                    ImGui::SetNextItemWidth(inputWidth);
                    ImGui::InputScalar("##TeleportLocationY", ImGuiDataType_Double, &TeleportLocation.Y, &d5);

                    // Z Coordinate
                    ImGui::AlignTextToFramePadding();
                    ImGui::Text("Z: ");
                    ImGui::SameLine(labelWidth);
                    ImGui::SetNextItemWidth(inputWidth);
                    ImGui::InputScalar("##TeleportLocationZ", ImGuiDataType_Double, &TeleportLocation.Z, &d5);

                    // Yaw
                    ImGui::AlignTextToFramePadding();
                    ImGui::Text("YAW: ");
                    ImGui::SameLine(labelWidth);
                    ImGui::SetNextItemWidth(inputWidth);
                    ImGui::InputScalar("##TeleportRotateYaw", ImGuiDataType_Double, &TeleportRotate.Yaw, &d1);

                    ImGui::Spacing();

                    if (ImGui::Button("Get Current Coordinates")) {
                        TeleportLocation = ValeriaCharacter->K2_GetActorLocation();
                        TeleportRotate = ValeriaCharacter->K2_GetActorRotation();
                    }
                    ImGui::SameLine();
                    if (ImGui::Button("Teleport To Coordinates")) {
                        FHitResult HitResult;
                        ValeriaCharacter->K2_SetActorLocation(TeleportLocation, false, &HitResult, true);
                        // NOTE: Disabled, testing for now.
                        // PaliaContext.PlayerController->ClientForceGarbageCollection();
                        // PaliaContext.PlayerController->ClientFlushLevelStreaming();
                    }
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }

            if (ImGui::CollapsingHeader("Gatherable Items - General##GatherableSettingsHeader")) {
                if (ValeriaCharacter) {
                    ImGui::Text("Pickable List. Double-click a pickable to teleport to it.");
                    ImGui::Text("Populates from enabled Forageable ESP options.");

                    // Automatically sort by name before showing the list
                    std::ranges::sort(CachedActors, [](const FEntry& a, const FEntry& b) {
                        return a.DisplayName < b.DisplayName;
                    });

                    if (ImGui::ListBoxHeader("##PickableTeleportList", ImVec2(-1, 150))) {
                        for (auto& [Actor, WorldPosition, DisplayName, ActorType, Type, Quality, Variant, shouldAdd] : CachedActors) {
                            if (shouldAdd && (ActorType == EType::Forage || ActorType == EType::Loot)) {
                                // Enabled ESP options only
                                if (ActorType == EType::Forage && !Forageables[Type][Quality])
                                    continue;

                                if (Actor && Actor->IsValidLowLevel() && !Actor->IsDefaultObject()) {
                                    FVector PickableLocation = Actor->K2_GetActorLocation();

                                    if (ImGui::Selectable(DisplayName.c_str(), false, ImGuiSelectableFlags_AllowDoubleClick)) {
                                        if (ImGui::IsMouseDoubleClicked(0)) {
                                            PickableLocation.Z += 150;

                                            FHitResult PickableHitResult;
                                            ValeriaCharacter->K2_SetActorLocation(PickableLocation, false, &PickableHitResult, true);
                                        }
                                    }
                                }
                            }
                        }
                        ImGui::ListBoxFooter();
                    }
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }
        }
        // ==================================== 3 Selling & Items TAB
        else if (OpenTab == 3) {
            ImGui::Columns(2, nullptr, false);

            AValeriaCharacter* ValeriaCharacter = GetValeriaData();

            if (ImGui::CollapsingHeader("Selling Settings - Bag 1##SellingSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    UVillagerStoreComponent* StoreComponent = ValeriaCharacter->StoreComponent;

                    ImGui::Text("Quickly Sell Items - Bag 1");
                    ImGui::Spacing();
                    ImGui::Text("Select the bag, slot, and quantity to sell.");
                    ImGui::Spacing();
                    static int selectedSlot = 0;
                    static int selectedQuantity = 1;
                    static const char* quantities[] = {"1", "10", "50", "999", "Custom"};
                    static char customQuantity[64] = "100";

                    // Slot selection dropdown
                    if (ImGui::BeginCombo("Slot", std::to_string(selectedSlot+1).c_str())) {
                        for (int i = 0; i < 8; i++) {
                            const bool isSelected = (selectedSlot == i);
                            if (ImGui::Selectable(std::to_string(i + 1).c_str(), isSelected)) {
                                selectedSlot = i;
                            }
                            if (isSelected) {
                                ImGui::SetItemDefaultFocus();
                            }
                        }
                        ImGui::EndCombo();
                    }

                    // Quantity selection dropdown
                    if (ImGui::BeginCombo("Quantity", quantities[selectedQuantity])) {
                        for (int i = 0; i < IM_ARRAYSIZE(quantities); i++) {
                            const bool isSelected = (selectedQuantity == i);
                            if (ImGui::Selectable(quantities[i], isSelected)) {
                                selectedQuantity = i;
                            }
                            if (isSelected) {
                                ImGui::SetItemDefaultFocus();
                            }
                        }
                        ImGui::EndCombo();
                    }

                    if (selectedQuantity == 4) {
                        ImGui::InputText("##CustomQuantity", customQuantity, IM_ARRAYSIZE(customQuantity));
                    }

                    if (ImGui::Button("Sell Items")) {
                        FBagSlotLocation bag = {};
                        bag.BagIndex = 0;
                        bag.SlotIndex = selectedSlot;

                        if (!StoreComponent->StoreCanBuyItem(bag)) {
                            StoreComponent->Client_SetVillagerStore(2);
                            StoreComponent->Client_OpenStore();
                        }

                        const int quantityToSell = selectedQuantity < 4
                                                       ? atoi(quantities[selectedQuantity])
                                                       : atoi(customQuantity);

                        ValeriaCharacter->StoreComponent->RpcServer_SellItem(bag, quantityToSell);
                    }
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }

            ImGui::NextColumn();

            if (ImGui::CollapsingHeader("Player Features - General##PlayerSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    if (ImGui::Button("Toggle Challenge Easy Mode")) {
                        ValeriaCharacter->RpcServer_ToggleDevChallengeEasyMode();
                        bEasyModeActive = !bEasyModeActive;
                    }
                    if (bEasyModeActive) {
                        ImGui::Text("CHALLENGE EASY MODE ON");
                    } else {
                        ImGui::Text("CHALLENGE EASY MODE OFF");
                    }
                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }
        }
        // ==================================== 4 Skills & Tools TAB
        else if (OpenTab == 4) {
            ImGui::Columns(2, nullptr, false);

            AValeriaCharacter* ValeriaCharacter = GetValeriaData();
            UFishingComponent* FishingComponent = nullptr;
            auto EquippedTool = ETools::None;

            if (ValeriaCharacter) {
                FishingComponent = ValeriaCharacter->GetFishing();
            }

            if (ImGui::CollapsingHeader("Skill Settings - General##SkillsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    std::string EquippedName;
                    EquippedName = ValeriaCharacter->GetEquippedItem().ItemType->Name.ToString();
                    //FishingComponent = ValeriaCharacter->GetFishing();
                    
                    if (EquippedName.find("Tool_Axe_") != std::string::npos) {
                        EquippedTool = ETools::Axe;
                    } else if (EquippedName.find("Tool_InsectBallLauncher_") != std::string::npos) {
                        EquippedTool = ETools::Belt;
                    } else if (EquippedName.find("Tool_Bow_") != std::string::npos) {
                        EquippedTool = ETools::Bow;
                    } else if (EquippedName.find("Tool_Rod_") != std::string::npos) {
                        EquippedTool = ETools::FishingRod;
                    } else if (EquippedName.find("Tool_Hoe_") != std::string::npos) {
                        EquippedTool = ETools::Hoe;
                    } else if (EquippedName.find("Tool_Pick") != std::string::npos) {
                        EquippedTool = ETools::Pick;
                    } else if (EquippedName.find("Tool_WateringCan_") != std::string::npos) {
                        EquippedTool = ETools::WateringCan;
                    } else {
                        EquippedTool = ETools::None;
                    }

                    ImGui::Text("Equipped Tool : %s", STools[static_cast<int>(EquippedTool)]);

                } else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }

            ImGui::NextColumn();

            if (ImGui::CollapsingHeader("Fishing Settings - General##FishingHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (FishingComponent) {
                    if (ImGui::Checkbox("Disable Durability Loss", &bFishingNoDurability)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Enable Multiplayer Help", &bFishingMultiplayerHelp)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Always Perfect Catch", &bFishingPerfectCatch)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Instant Catch", &bFishingInstantCatch)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Sell All Fish", &bFishingSell)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Discard All Junk", &bFishingDiscard)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (ImGui::Checkbox("Open and Store Makeshift Decor", &bFishingOpenStoreWaterlogged)) {
                        SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                    }

                    if (EquippedTool == ETools::FishingRod) {
                        if (ImGui::Checkbox("Auto Fast Fishing", &bEnableAutoFishing)) {
                            SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                        }
                        if (ImGui::Checkbox("Require Holding Left-Click To Auto Fish", &bRequireClickFishing)) {
                            SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                        }
                    }
                    else {
                        ImGui::Spacing();
                        ImGui::Text("[ EQUIP FISHING ROD TO VIEW FAST FISHING OPTIONS ]");
                        ImGui::Spacing();
                        bRequireClickFishing = true;
                    }

                    ImGui::Checkbox("Force Fishing Pool", &bOverrideFishingSpot);
                    ImGui::SameLine();
                    ImGui::SetNextItemWidth(200.0f);
                    if (ImGui::Combo("##FishingSpotsCombo", &bSelectedFishingSpot, bFishingSpots, IM_ARRAYSIZE(bFishingSpots))) {
                        if (bSelectedFishingSpot > 0) {
                            sOverrideFishingSpot = SDK::UKismetStringLibrary::Conv_StringToName(bFishingSpotsFString[bSelectedFishingSpot - 1]);
                        }
                        else {
                            bSelectedFishingSpot = 0;
                            sOverrideFishingSpot = FName(0);
                            bOverrideFishingSpot = false;
                        }
                    }
                } else {
                    if (!ValeriaCharacter) {
                        ImGui::Text("Waiting for character initialization...");
                    }
                    else {
                        ImGui::Text("Fishing component not available.");
                    }
                }
            }
        }
        // ==================================== 5 Housing & Decorating TAB
        else if (OpenTab == 5) {
            ImGui::Columns(1, nullptr, false);

            AValeriaCharacter* ValeriaCharacter = GetValeriaData();

            if (ImGui::CollapsingHeader("Housing Base Settings##HousingBaseSettingsHeader", ImGuiTreeNodeFlags_DefaultOpen)) {
                if (ValeriaCharacter) {
                    //UPlacementComponent* PlacementComponent = ValeriaCharacter->GetPlacement();
                    if (ValeriaCharacter->GetPlacement()) {
                        if (ImGui::Checkbox("Place Items Anywhere", &bPlaceAnywhere)) {
                            SaveConfiguration(bEnableAntiAfk, bEnableSilentAimbot, bEnableAimbot, bTeleportToTargeted, bEnableWaypointTeleport, bAvoidTeleportingToPlayers, bEnableLootbagTeleportation, bEnableESP, ESPTextScale, bEnableESPCulling, CullDistance, bDrawFOVCircle, FOVRadius, bFishingNoDurability, bFishingMultiplayerHelp, bFishingPerfectCatch, bFishingInstantCatch, bFishingSell, bFishingDiscard, bFishingOpenStoreWaterlogged, bRequireClickFishing, CustomWalkSpeed, CustomSprintSpeedMultiplier, CustomClimbingSpeed, CustomGlidingSpeed, CustomGlidingFallSpeed, CustomJumpVelocity, CustomMaxStepHeight, bPlaceAnywhere, bEnableSernuk, bEnableElderSernuk, bEnableProudhornSernuk, bEnableChapaa, bEnableStripedChapaa, bEnableAzureChapaa, bEnableMinigameChapaa, bEnableMuujin, bEnableBandedMuujin, bEnableBluebristleMuujin, bEnableClayLg, bEnableStoneSm, bEnableStoneMed, bEnableStoneLg, bEnableCopperSm, bEnableCopperMed, bEnableCopperLg, bEnableIronSm, bEnableIronMed, bEnableIronLg, bEnablePaliumSm, bEnablePaliumMed, bEnablePaliumLg, bEnableCoral, bEnableOyster, bEnableShell, bEnablePoisonFlower, bEnablePoisonFlowerP, bEnableWaterFlower, bEnableWaterFlowerP, bEnableHeartdrop, bEnableHeartdropP, bEnableSundrop, bEnableSundropP, bEnableDragonsBeard, bEnableDragonsBeardP, bEnableEmeraldCarpet, bEnableEmeraldCarpetP, bEnableMushroomBlue, bEnableMushroomBlueP, bEnableMushroomRed, bEnableMushroomRedP, bEnableDariCloves, bEnableDariClovesP, bEnableHeatRoot, bEnableHeatRootP, bEnableSpicedSprouts, bEnableSpicedSproutsP, bEnableSweetLeaves, bEnableSweetLeavesP, bEnableGarlic, bEnableGarlicP, bEnableGinger, bEnableGingerP, bEnableGreenOnion, bEnableGreenOnionP, bEnableBeeU, bEnableBeeUP, bEnableBeeR, bEnableBeeRP, bEnableBeetleC, bEnableBeetleCP, bEnableBeetleU, bEnableBeetleUP, bEnableBeetleR, bEnableBeetleRP, bEnableBeetleE, bEnableBeetleEP, bEnableButterflyC, bEnableButterflyCP, bEnableButterflyU, bEnableButterflyUP, bEnableButterflyR, bEnableButterflyRP, bEnableButterflyE, bEnableButterflyEP, bEnableCicadaC, bEnableCicadaCP, bEnableCicadaU, bEnableCicadaUP, bEnableCicadaR, bEnableCicadaRP, bEnableCrabC, bEnableCrabCP, bEnableCrabU, bEnableCrabUP, bEnableCrabR, bEnableCrabRP, bEnableCricketC, bEnableCricketCP, bEnableCricketU, bEnableCricketUP, bEnableCricketR, bEnableCricketRP, bEnableDragonflyC, bEnableDragonflyCP, bEnableDragonflyU, bEnableDragonflyUP, bEnableDragonflyR, bEnableDragonflyRP, bEnableDragonflyE, bEnableDragonflyEP, bEnableGlowbugC, bEnableGlowbugCP, bEnableGlowbugU, bEnableGlowbugUP, bEnableLadybugC, bEnableLadybugCP, bEnableLadybugU, bEnableLadybugUP, bEnableMantisU, bEnableMantisUP, bEnableMantisR, bEnableMantisRP, bEnableMantisR2, bEnableMantisR2P, bEnableMantisE, bEnableMantisEP, bEnableMothC, bEnableMothCP, bEnableMothU, bEnableMothUP, bEnableMothR, bEnableMothRP, bEnablePedeU, bEnablePedeUP, bEnablePedeR, bEnablePedeRP, bEnablePedeR2, bEnablePedeR2P, bEnableSnailU, bEnableSnailUP, bEnableSnailR, bEnableSnailRP, bEnableBushSm, bEnableSapwoodSm, bEnableSapwoodMed, bEnableSapwoodLg, bEnableHeartwoodSm, bEnableHeartwoodMed, bEnableHeartwoodLg, bEnableFlowSm, bEnableFlowMed, bEnableFlowLg, bEnablePlayers, bEnableNPC, bEnableFish, bEnablePools, bEnableLoot, bEnableQuest, bEnableRummagePiles, bEnableStables, bEnableOthers, windowSizeX, windowSizeY);
                        }
                        // ImGui::Checkbox("Manual Position Adjustment", &bManualPositionAdjustment);

                    }
                    else {
                        ImGui::Text("No Placement Component available.");
                    }
                }
                else {
                    ImGui::Text("Waiting for character initialization...");
                }
            }
        }
    }

    ImGui::End();

    if (!show)
        ShowOverlay(false);
}

void PaliaOverlay::ProcessActors(int step) {
    std::erase_if(CachedActors, [this, step](const FEntry& Entry) {
        return static_cast<int>(Entry.ActorType) == step;
    });

    auto World = GetWorld();
    if (!World)
        return;

    const auto ActorType = static_cast<EType>(step);
    std::vector<AActor*> Actors;
    std::vector<UClass*> SearchClasses;

    // What are gates anyways?
    STATIC_CLASS("BP_Stables_FrontGate_01_C", SearchClasses)
    STATIC_CLASS("BP_Stables_FrontGate_02_C", SearchClasses)

    switch (ActorType) {
    case EType::Tree:
        if (AnyTrue2D(Trees)) {
            STATIC_CLASS("BP_ValeriaGatherableLoot_Lumber_C", SearchClasses)
        }
        break;
    case EType::Ore:
        if (AnyTrue2D(Ores)) {
            STATIC_CLASS("BP_ValeriaGatherableLoot_Mining_Base_C", SearchClasses)
        }
        break;
    case EType::Bug:
        if (AnyTrue3D(Bugs)) {
            STATIC_CLASS("BP_ValeriaBugCatchingCreature_C", SearchClasses)
        }
        break;
    case EType::Animal:
        if (AnyTrue2D(Animals)) {
            STATIC_CLASS("BP_ValeriaHuntingCreature_C", SearchClasses)
        }
        break;
    case EType::Forage:
        if (AnyTrue2D(Forageables)) {
            STATIC_CLASS("BP_Valeria_Gatherable_Placed_C", SearchClasses)
        }
        break;
    case EType::Loot:
        if (Singles[static_cast<int>(EOneOffs::Loot)] || bEnableLootbagTeleportation) {
            STATIC_CLASS("BP_Loot_C", SearchClasses)
        }
        break;
    case EType::Players:
        if (Singles[static_cast<int>(EOneOffs::Player)]) {
            SearchClasses.push_back(AValeriaCharacter::StaticClass());
        }
        break;
    case EType::NPCs:
        if (Singles[static_cast<int>(EOneOffs::NPC)]) {
            SearchClasses.push_back(AValeriaVillagerCharacter::StaticClass());
        }
        break;
    case EType::Quest:
        if (Singles[static_cast<int>(EOneOffs::Quest)]) {
            STATIC_CLASS("BP_SimpleInspect_Base_C", SearchClasses)
            STATIC_CLASS("BP_QuestInspect_Base_C", SearchClasses)
            STATIC_CLASS("BP_QuestItem_BASE_C", SearchClasses)
        }
        break;
    case EType::RummagePiles:
        if (Singles[static_cast<int>(EOneOffs::RummagePiles)]) {
            STATIC_CLASS("BP_BeachPile_C", SearchClasses)
            STATIC_CLASS("BP_ChapaaPile_C", SearchClasses)
        }
        break;
    case EType::Stables:
        if (Singles[static_cast<int>(EOneOffs::Stables)]) {
            STATIC_CLASS("BP_Stables_Sign_C", SearchClasses)
        }
        break;
    case EType::Fish:
        if (AnyTrue(Fish)) {
            STATIC_CLASS("BP_WaterPlane_Fishing_Base_SQ_C", SearchClasses)
            STATIC_CLASS("BP_Minigame_Fish_C", SearchClasses)
        }
        break;
    default:
        break;
    }

    if (!SearchClasses.empty()) {
        if (ActorType == EType::RummagePiles || ActorType == EType::Stables) {
            Actors = FindAllActorsOfTypes(World, SearchClasses);
        } else {
            Actors = FindActorsOfTypes(World, SearchClasses);
        }
    }

    for (AActor* Actor : Actors) {
        auto ClassName = Actor->Class->GetName();

        // [HACK] Gates-Begone
        if (ClassName.find("_FrontGate_") != std::string::npos) {
            // Destroy and move on, no caching.
            Actor->K2_DestroyActor();
            continue;
        }

        if (!Actor || !Actor->IsValidLowLevel() || Actor->IsDefaultObject())
            continue;

        const FVector ActorPosition = Actor->K2_GetActorLocation();
        if (ActorPosition.IsZero() || ActorPosition == FVector{2, 0, -9900})
            continue;

        int Type = 0;
        int Quality = 0;
        int Variant = 0;

        bool shouldAdd = false;

        switch (ActorType) {
        case EType::Tree: {
            if (auto Tree = GetFlagSingle(ClassName, TREE_TYPE_MAPPINGS); Tree != ETreeType::Unknown) {
                if (auto Size = GetFlagSingle(ClassName, GATHERABLE_SIZE_MAPPINGS); Size != EGatherableSize::Unknown) {
                    shouldAdd = true;
                    Type = static_cast<int>(Tree);
                    Variant = static_cast<int>(Size);
                }
            }
            break;
        }
        case EType::Ore: {
            if (auto OreType = GetFlagSingle(ClassName, MINING_TYPE_MAPPINGS); OreType != EOreType::Unknown) {
                auto Size = GetFlagSingle(ClassName, GATHERABLE_SIZE_MAPPINGS);
                if (OreType == EOreType::Clay)
                    Size = EGatherableSize::Large;
                if (Size != EGatherableSize::Unknown) {
                    shouldAdd = true;
                    Type = static_cast<int>(OreType);
                    Variant = static_cast<int>(Size);
                }
            }
            break;
        }
        case EType::Bug: {
            if (auto BugType = GetFlagSingle(ClassName, CREATURE_BUGKIND_MAPPINGS); BugType != EBugKind::Unknown) {
                if (auto BVar = GetFlagSingleEnd(ClassName, CREATURE_BUGQUALITY_MAPPINGS); BVar != EBugQuality::Unknown) {
                    shouldAdd = true;
                    Type = static_cast<int>(BugType);
                    Variant = static_cast<int>(BVar);
                    if (ClassName.ends_with("+_C")) {
                        Quality = 1;
                    }
                }
            }
            break;
        }
        case EType::Animal: {
            if (auto CKType = GetFlagSingle(ClassName, CREATURE_KIND_MAPPINGS); CKType != ECreatureKind::Unknown) {
                if (auto CQType = GetFlagSingleEnd(ClassName, CREATURE_KINDQUALITY_MAPPINGS); CQType != ECreatureQuality::Unknown) {
                    shouldAdd = true;
                    Type = static_cast<int>(CKType);
                    Variant = static_cast<int>(CQType);
                }
            }
            break;
        }
        case EType::Forage: {
            if (!Actor->bActorEnableCollision)
                continue;

            if (auto ForageType = GetFlagSingle(ClassName, FORAGEABLE_TYPE_MAPPINGS); ForageType != EForageableType::Unknown) {
                shouldAdd = true;
                Type = static_cast<int>(ForageType);
                if (ClassName.ends_with("+_C")) {
                    Quality = 1;
                }
            }
            break;
        }
        case EType::Loot: {
            shouldAdd = true;
            Type = 1; // doesn't matter, but isn't "unknown"
            break;
        }
        case EType::Players: {
            shouldAdd = true;
            Type = 1; // doesn't matter, but isn't "unknown"
            const auto VActor = static_cast<AValeriaCharacter*>(Actor);
            ClassName = VActor->CharacterName.ToString();
            break;
        }
        case EType::NPCs: {
            shouldAdd = true;
            Type = 1; // doesn't matter, but isn't "unknown"
            break;
        }
        case EType::Quest: {
            if (!Actor->bActorEnableCollision)
                continue;

            shouldAdd = true;
            Type = 1;
            break;
        }
        case EType::RummagePiles: {
            shouldAdd = true;
            Type = 1;
            break;
        }
        case EType::Stables: {
            shouldAdd = true;
            Type = 1;
            break;
        }
        case EType::Fish: {
            if (auto FishType = GetFlagSingle(ClassName, FISH_TYPE_MAPPINGS); FishType != EFishType::Unknown) {
                shouldAdd = true;
                Type = static_cast<int>(FishType);
            }
            break;
        }
        default:
            break;
        }

        if (!shouldAdd && !bVisualizeDefault)
            continue;

        const std::string Name = CLASS_NAME_ALIAS.contains(ClassName) ? CLASS_NAME_ALIAS[ClassName] : ClassName;
        CachedActors.push_back({Actor, ActorPosition, Name, ActorType, Type, Quality, Variant, shouldAdd});
    }
}
